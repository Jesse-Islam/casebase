{
    "docs": [
        {
            "location": "/", 
            "text": "casebase\n: A Statistical Software Tool for Survival Analysis\n\n\n\nThis software is written in the open source software environment \nR\n. It's main functionality is to fit smooth-in-time parametric hazard functions using case-base sampling \nHanley \n&\n Miettinen (2009)\n.\n\n\n\n\n\nThis approach allows the explicit inclusion of the time variable into the model, which enables the user to fit a wide class of parametric hazard functions. For example, including time linearly recovers the Gompertz hazard, whereas including time logarithmically recovers the Weibull hazard; not including time at all corresponds to the exponential hazard.\n\n\n\n\n\nThe theoretical properties of this approach have been studied in \nSaarela \n&\n Arjas (2015) and Saarela (2015)\n.\n\n\n\n\n\nThe software is still in development mode.\n\n\n\n\n\nInstallation\n\n\n\n\n\nThe software package is available on \nGithub\n and can be installed directly from within \nR\n using the following commands (note: you will need the \npacman\n package prior to installing the \ncasebase\n package)\n\n\n\n\nlibrary\n(\npacman\n)\n\npacman\n::\np_install_gh\n(\nsahirbhatnagar/casebase\n)", 
            "title": "Home"
        }, 
        {
            "location": "/#casebase-a-statistical-software-tool-for-survival-analysis", 
            "text": "This software is written in the open source software environment  R . It's main functionality is to fit smooth-in-time parametric hazard functions using case-base sampling  Hanley  &  Miettinen (2009) .  \nThis approach allows the explicit inclusion of the time variable into the model, which enables the user to fit a wide class of parametric hazard functions. For example, including time linearly recovers the Gompertz hazard, whereas including time logarithmically recovers the Weibull hazard; not including time at all corresponds to the exponential hazard.  \nThe theoretical properties of this approach have been studied in  Saarela  &  Arjas (2015) and Saarela (2015) .  \nThe software is still in development mode.", 
            "title": "casebase: A Statistical Software Tool for Survival Analysis"
        }, 
        {
            "location": "/smoothHazard/", 
            "text": "Methodological details\n\n\nCase-base sampling was proposed by Hanley \n Miettinen \n-@hanley2009fitting\n as a way to fit smooth-in-time parametric hazard functions via logistic regression. The main idea, which was first proposed by Mantel \n-@mantel1973synthetic\n and then later developped by Efron \n-@efron1977efficiency\n, is to sample person-moments, i.e. discrete time points along an subject's follow-up time, in order to construct a base series against which the case series can be compared.\n\n\nThis approach allows the explicit inclusion of the time variable into the model, which enables the user to fit a wide class of parametric hazard functions. For example, including time linearly recovers the Gompertz hazard, whereas including time \nlogarithmically\n recovers the Weibull hazard; not including time at all corresponds to the exponential hazard.\n\n\nThe theoretical properties of this approach have been studied in Saarela \n Arjas \n-@saarela2015non\n and Saarela \n-@saarela2015case\n.\n\n\nFirst example\n\n\nThe first example we discuss uses the well-known \nveteran\n dataset, which is part of the \nsurvival\n package. As we can see below, there is almost no censoring, and therefore we can get a good visual representation of the survival function:\n\n\nlibrary\n(\nsurvival\n)\n\ndata\n(\nveteran\n)\n\n\ntable\n(\nveteran\n$\nstatus\n)\n\n\n\n\n\n\n## \n##   0   1 \n##   9 128\n\n\n\n\n\nevtimes \n-\n veteran\n$\ntime\n[\nveteran\n$\nstatus \n==\n \n1\n]\n\nhist\n(\nevtimes\n,\n nclass\n=\n30\n,\n main\n=\n,\n xlab\n=\nSurvival time (days)\n,\n col\n=\ngray90\n,\n probability\n=\nTRUE\n)\n\ntgrid \n-\n \nseq\n(\n0\n,\n \n1000\n,\n by\n=\n10\n)\n\nlines\n(\ntgrid\n,\n dexp\n(\ntgrid\n,\n rate\n=\n1.0\n/\nmean\n(\nevtimes\n)),\n \n      lwd\n=\n2\n,\n lty\n=\n2\n,\n col\n=\nred\n)\n\n\n\n\n\n\n\n\nAs we can see, the empirical survival function ressembles an exponential distribution.\n\n\nWe will first try to estimate the hazard function parametrically using some well-known regression routines. But first, we will reformat the data slightly.\n\n\nveteran\n$\nprior \n-\n \nfactor\n(\nveteran\n$\nprior\n,\n levels \n=\n \nc\n(\n0\n,\n \n10\n))\n\nveteran\n$\ncelltype \n-\n \nfactor\n(\nveteran\n$\ncelltype\n,\n \n                           levels \n=\n \nc\n(\nlarge\n,\n \nsquamous\n,\n \nsmallcell\n,\n \nadeno\n))\n\nveteran\n$\ntrt \n-\n \nfactor\n(\nveteran\n$\ntrt\n,\n levels \n=\n \nc\n(\n1\n,\n \n2\n))\n\n\n\n\n\n\nUsing the \neha\n package, we can fit a Weibull form, with different values of the shape parameter. For \ns\nh\na\np\ne\n\u2004=\u20041, we get an exponential distribution:\n\n\npacman\n::\np_load\n(\neha\n)\n\ny \n-\n \nwith\n(\nveteran\n,\n Surv\n(\ntime\n,\n status\n))\n\n\nmodel1 \n-\n weibreg\n(\ny \n~\n karno \n+\n diagtime \n+\n age \n+\n prior \n+\n celltype \n+\n trt\n,\n \n                  data \n=\n veteran\n,\n shape \n=\n \n1\n)\n\n\nsummary\n(\nmodel1\n)\n\n\n\n\n\n\n## Call:\n## weibreg(formula = y ~ karno + diagtime + age + prior + celltype + \n##     trt, data = veteran, shape = 1)\n## \n## Covariate           Mean       Coef Exp(Coef)  se(Coef)    Wald p\n## karno              68.419    -0.031     0.970     0.005     0.000 \n## diagtime            8.139     0.000     1.000     0.009     0.974 \n## age                57.379    -0.006     0.994     0.009     0.505 \n## prior \n##                0    0.653     0         1           (reference)\n##               10    0.347     0.049     1.051     0.227     0.827 \n## celltype \n##            large    0.269     0         1           (reference)\n##         squamous    0.421    -0.377     0.686     0.273     0.166 \n##        smallcell    0.206     0.443     1.557     0.261     0.090 \n##            adeno    0.104     0.736     2.087     0.294     0.012 \n## trt \n##                1    0.477     0         1           (reference)\n##                2    0.523     0.220     1.246     0.199     0.269 \n## \n## log(scale)                    2.811    16.633     0.713     0.000 \n## \n##  Shape is fixed at  1 \n## \n## Events                    128 \n## Total time at risk         16663 \n## Max. log. likelihood      -716.16 \n## LR test statistic         70.1 \n## Degrees of freedom        8 \n## Overall p-value           4.64229e-12\n\n\n\n\n\nIf we take \ns\nh\na\np\ne\n\u2004=\u20040, the shape parameter is estimated along with the regression coefficients:\n\n\nmodel2 \n-\n weibreg\n(\ny \n~\n karno \n+\n diagtime \n+\n age \n+\n prior \n+\n celltype \n+\n trt\n,\n \n                  data \n=\n veteran\n,\n shape \n=\n \n0\n)\n\n\nsummary\n(\nmodel2\n)\n\n\n\n\n\n\n## Call:\n## weibreg(formula = y ~ karno + diagtime + age + prior + celltype + \n##     trt, data = veteran, shape = 0)\n## \n## Covariate           Mean       Coef Exp(Coef)  se(Coef)    Wald p\n## karno              68.419    -0.032     0.968     0.005     0.000 \n## diagtime            8.139     0.001     1.001     0.009     0.955 \n## age                57.379    -0.007     0.993     0.009     0.476 \n## prior \n##                0    0.653     0         1           (reference)\n##               10    0.347     0.047     1.048     0.229     0.836 \n## celltype \n##            large    0.269     0         1           (reference)\n##         squamous    0.421    -0.428     0.651     0.278     0.123 \n##        smallcell    0.206     0.462     1.587     0.262     0.078 \n##            adeno    0.104     0.792     2.208     0.300     0.008 \n## trt \n##                1    0.477     0         1           (reference)\n##                2    0.523     0.246     1.279     0.203     0.224 \n## \n## log(scale)                    2.864    17.537     0.671     0.000 \n## log(shape)                    0.075     1.077     0.066     0.261 \n## \n## Events                    128 \n## Total time at risk         16663 \n## Max. log. likelihood      -715.55 \n## LR test statistic         65.1 \n## Degrees of freedom        8 \n## Overall p-value           4.65393e-11\n\n\n\n\n\nFinally, we can also fit a Cox proportional hazard:\n\n\nmodel3 \n-\n coxph\n(\ny \n~\n karno \n+\n diagtime \n+\n age \n+\n prior \n+\n celltype \n+\n trt\n,\n \n                data \n=\n veteran\n)\n\n\nsummary\n(\nmodel3\n)\n\n\n\n\n\n\n## Call:\n## coxph(formula = y ~ karno + diagtime + age + prior + celltype + \n##     trt, data = veteran)\n## \n##   n= 137, number of events= 128 \n## \n##                         coef  exp(coef)   se(coef)      z Pr(\n|z|)    \n## karno             -3.282e-02  9.677e-01  5.508e-03 -5.958 2.55e-09 ***\n## diagtime           8.132e-05  1.000e+00  9.136e-03  0.009  0.99290    \n## age               -8.706e-03  9.913e-01  9.300e-03 -0.936  0.34920    \n## prior10            7.159e-02  1.074e+00  2.323e-01  0.308  0.75794    \n## celltypesquamous  -4.013e-01  6.695e-01  2.827e-01 -1.420  0.15574    \n## celltypesmallcell  4.603e-01  1.584e+00  2.662e-01  1.729  0.08383 .  \n## celltypeadeno      7.948e-01  2.214e+00  3.029e-01  2.624  0.00869 ** \n## trt2               2.946e-01  1.343e+00  2.075e-01  1.419  0.15577    \n## ---\n## Signif. codes:  0 \n***\n 0.001 \n**\n 0.01 \n*\n 0.05 \n.\n 0.1 \n \n 1\n## \n##                   exp(coef) exp(-coef) lower .95 upper .95\n## karno                0.9677     1.0334    0.9573    0.9782\n## diagtime             1.0001     0.9999    0.9823    1.0182\n## age                  0.9913     1.0087    0.9734    1.0096\n## prior10              1.0742     0.9309    0.6813    1.6937\n## celltypesquamous     0.6695     1.4938    0.3847    1.1651\n## celltypesmallcell    1.5845     0.6311    0.9403    2.6699\n## celltypeadeno        2.2139     0.4517    1.2228    4.0084\n## trt2                 1.3426     0.7448    0.8939    2.0166\n## \n## Concordance= 0.736  (se = 0.03 )\n## Rsquare= 0.364   (max possible= 0.999 )\n## Likelihood ratio test= 62.1  on 8 df,   p=1.799e-10\n## Wald test            = 62.37  on 8 df,   p=1.596e-10\n## Score (logrank) test = 66.74  on 8 df,   p=2.186e-11\n\n\n\n\n\nAs we can see, all three models are significant, and they give similar information: \nkarno\n and \ncelltype\n are significant predictors, both treatment is not.\n\n\nThe method available in this package makes use of \ncase-base sampling\n. That is, person-moments are randomly sampled across the entire follow-up time, with some moments corresponding to cases and others to controls. By sampling person-moments instead of individuals, we can then use logistic regression to fit smooth-in-time parametric hazard functions. See the previous section for more details.\n\n\nFirst, we will look at the follow-up time by using population-time plots:\n\n\nnobs \n-\n \nnrow\n(\ny\n)\n\nftime \n-\n veteran\n$\ntime\nord \n-\n \norder\n(\nftime\n,\n decreasing\n=\nTRUE\n)\n\nplot\n(\n0\n,\n type\n=\nn\n,\n xlim\n=\nc\n(\n0\n,\n \nmax\n(\nftime\n)),\n ylim\n=\nc\n(\n0\n,\n nobs\n),\n \n     xlab\n=\nFollow-up time\n,\n ylab\n=\nPopulation\n)\n\nsegments\n(\nrep\n(\n0.0\n,\n nobs\n),\n \n1\n:\nnobs\n,\n ftime\n[\nord\n],\n \n1\n:\nnobs\n,\n col\n=\ngray25\n)\n\ncases \n-\n veteran\n$\nstatus \n==\n \n1\n\npoints\n((\nftime\n[\nord\n])[\ncases\n[\nord\n]],\n \n(\n1\n:\nnobs\n)[\ncases\n[\nord\n]],\n pch\n=\n20\n,\n col\n=\nred\n,\n cex\n=\n0.5\n)\n\n\n\n\n\n\n\n\nPopulation-time plots are a useful way of visualizing the total follow-up experience, where individuals appear on the y-axis, and follow-up time on the x-axis; each individual's follow-up time is represented by a gray line segment. For convenience, we have ordered the patients according to their time-to-event, and each event is represented by a red dot. The censored observations (of which there is only a few) correspond to the grey lines which do not end with a red dot.\n\n\nNext, we use case-base sampling to fit a parametric hazard function via logistic regression. First, we will include time as a linear term; as noted above, this corresponds to an Gompertz hazard.\n\n\nlibrary\n(\ncasebase\n)\n\n\n\n\n\n\n## Loading required package: VGAM\n\n## Loading required package: stats4\n\n## Loading required package: splines\n\n## \n## Attaching package: \nVGAM\n\n\n## The following objects are masked from \npackage:eha\n:\n## \n##     dgompertz, dmakeham, pgompertz, pmakeham, qgompertz, qmakeham,\n##     rgompertz, rmakeham\n\n\n\n\n\nmodel4 \n-\n fitSmoothHazard\n(\nstatus \n~\n time \n+\n karno \n+\n diagtime \n+\n age \n+\n prior \n+\n\n             celltype \n+\n trt\n,\n data \n=\n veteran\n,\n ratio\n=\n100\n,\n type \n=\n \nuniform\n)\n\n\n\n\n\n\n## \ntime\n will be used as the time variable\n\n\n\n\n\nsummary\n(\nmodel4\n)\n\n\n\n\n\n\n## \n## Call:\n## glm(formula = formula, family = binomial, data = sampleData)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -0.3883  -0.1516  -0.1209  -0.1004   3.4010  \n## \n## Coefficients:\n##                     Estimate Std. Error z value Pr(\n|z|)    \n## (Intercept)       -2.6972916  0.7327516  -3.681 0.000232 ***\n## time               0.0003558  0.0006467   0.550 0.582226    \n## karno             -0.0299930  0.0052469  -5.716 1.09e-08 ***\n## diagtime           0.0020130  0.0090887   0.221 0.824717    \n## age               -0.0098983  0.0093166  -1.062 0.288037    \n## prior10            0.0193600  0.2335128   0.083 0.933925    \n## celltypesquamous  -0.3717107  0.2850600  -1.304 0.192243    \n## celltypesmallcell  0.4900360  0.2632186   1.862 0.062644 .  \n## celltypeadeno      0.7575487  0.3014872   2.513 0.011981 *  \n## trt2               0.2054208  0.2014424   1.020 0.307847    \n## ---\n## Signif. codes:  0 \n***\n 0.001 \n**\n 0.01 \n*\n 0.05 \n.\n 0.1 \n \n 1\n## \n## (Dispersion parameter for binomial family taken to be 1)\n## \n##     Null deviance: 1436.2  on 12927  degrees of freedom\n## Residual deviance: 1368.6  on 12918  degrees of freedom\n## AIC: 1388.6\n## \n## Number of Fisher Scoring iterations: 8\n\n\n\n\n\nSince the output object from \nfitSmoothHazard\n inherits from the \nglm\n class, we see a familiar result when using the function \nsummary\n.\n\n\nThe main purpose of fitting smooth hazard functions is that it is then relatively easy to compute absolute risks. For example, we can use the function \nabsoluteRisk\n to compute the mean absolute risk at 90 days, which can then be compared to the empirical measure.\n\n\nabsoluteRisk\n(\nobject \n=\n model4\n,\n time \n=\n \n90\n)\n\n\n\n\n\n\n## [1] 0.5756621\n\n\n\n\n\nmean\n(\nftime \n=\n \n90\n)\n\n\n\n\n\n\n## [1] 0.5547445\n\n\n\n\n\nWe can also fit a Weibull hazard by using a logarithmic term for time:\n\n\nmodel5 \n-\n fitSmoothHazard\n(\nstatus \n~\n \nlog\n(\ntime\n)\n \n+\n karno \n+\n diagtime \n+\n age \n+\n prior \n+\n\n             celltype \n+\n trt\n,\n data \n=\n veteran\n,\n ratio\n=\n100\n,\n type \n=\n \nuniform\n)\n\n\n\n\n\n\n## \ntime\n will be used as the time variable\n\n\n\n\n\nsummary\n(\nmodel5\n)\n\n\n\n\n\n\n## \n## Call:\n## glm(formula = formula, family = binomial, data = sampleData)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -0.4382  -0.1512  -0.1200  -0.0970   3.4049  \n## \n## Coefficients:\n##                    Estimate Std. Error z value Pr(\n|z|)    \n## (Intercept)       -3.174679   0.744870  -4.262 2.03e-05 ***\n## log(time)          0.079176   0.071940   1.101   0.2711    \n## karno             -0.031588   0.005474  -5.770 7.91e-09 ***\n## diagtime           0.001787   0.009432   0.190   0.8497    \n## age               -0.004762   0.009241  -0.515   0.6063    \n## prior10            0.061890   0.232954   0.266   0.7905    \n## celltypesquamous  -0.455905   0.278424  -1.637   0.1015    \n## celltypesmallcell  0.451326   0.264522   1.706   0.0880 .  \n## celltypeadeno      0.758645   0.301447   2.517   0.0118 *  \n## trt2               0.245839   0.202616   1.213   0.2250    \n## ---\n## Signif. codes:  0 \n***\n 0.001 \n**\n 0.01 \n*\n 0.05 \n.\n 0.1 \n \n 1\n## \n## (Dispersion parameter for binomial family taken to be 1)\n## \n##     Null deviance: 1436.2  on 12927  degrees of freedom\n## Residual deviance: 1367.2  on 12918  degrees of freedom\n## AIC: 1387.2\n## \n## Number of Fisher Scoring iterations: 8\n\n\n\n\n\nWith case-base sampling, it is straightforward to fit a semi-parametric hazard function using splines, which can then be used to estimate the mean absolute risk.\n\n\n# Fit a spline for time\n\n\nlibrary\n(\nsplines\n)\n\nmodel6 \n-\n fitSmoothHazard\n(\nstatus \n~\n bs\n(\ntime\n)\n \n+\n karno \n+\n diagtime \n+\n age \n+\n prior \n+\n\n             celltype \n+\n trt\n,\n data \n=\n veteran\n,\n ratio\n=\n100\n,\n type \n=\n \nuniform\n)\n\n\n\n\n\n\n## \ntime\n will be used as the time variable\n\n\n\n\n\nsummary\n(\nmodel6\n)\n\n\n\n\n\n\n## \n## Call:\n## glm(formula = formula, family = binomial, data = sampleData)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -0.4419  -0.1524  -0.1188  -0.0962   3.5366  \n## \n## Coefficients:\n##                    Estimate Std. Error z value Pr(\n|z|)    \n## (Intercept)       -2.802692   0.733669  -3.820 0.000133 ***\n## bs(time)1          1.462042   1.020984   1.432 0.152145    \n## bs(time)2         -2.563804   1.744367  -1.470 0.141626    \n## bs(time)3          1.761402   0.986614   1.785 0.074213 .  \n## karno             -0.033064   0.005477  -6.037 1.57e-09 ***\n## diagtime           0.002782   0.009481   0.293 0.769201    \n## age               -0.006766   0.009401  -0.720 0.471725    \n## prior10           -0.026913   0.233568  -0.115 0.908265    \n## celltypesquamous  -0.398003   0.282814  -1.407 0.159339    \n## celltypesmallcell  0.436973   0.265627   1.645 0.099957 .  \n## celltypeadeno      0.737056   0.304795   2.418 0.015597 *  \n## trt2               0.221856   0.206569   1.074 0.282820    \n## ---\n## Signif. codes:  0 \n***\n 0.001 \n**\n 0.01 \n*\n 0.05 \n.\n 0.1 \n \n 1\n## \n## (Dispersion parameter for binomial family taken to be 1)\n## \n##     Null deviance: 1436.2  on 12927  degrees of freedom\n## Residual deviance: 1362.6  on 12916  degrees of freedom\n## AIC: 1386.6\n## \n## Number of Fisher Scoring iterations: 8\n\n\n\n\n\nabsoluteRisk\n(\nobject \n=\n model6\n,\n time \n=\n \n90\n)\n\n\n\n\n\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## [1] 0.5769713\n\n\n\n\n\nAs we can see from the summary, there is little evidence that splines actually improve the fit. Moreover, we can see that estimated individual absolute risks are essentially the same when using either a linear term or splines:\n\n\nlinearRisk \n-\n absoluteRisk\n(\nobject \n=\n model4\n,\n time \n=\n \n90\n,\n newdata \n=\n veteran\n)\n\nsplineRisk \n-\n absoluteRisk\n(\nobject \n=\n model6\n,\n time \n=\n \n90\n,\n newdata \n=\n veteran\n)\n\n\n\n\n\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some \nx\n values beyond boundary knots may cause\n## ill-conditioned bases\n\n\n\n\n\nplot\n(\nlinearRisk\n,\n splineRisk\n,\n\n     xlab\n=\nLinear\n,\n ylab \n=\n \nSplines\n,\n pch\n=\n19\n)\n\nabline\n(\na\n=\n0\n,\n b\n=\n1\n,\n lty\n=\n2\n,\n lwd\n=\n2\n,\n col\n=\nred\n)\n\n\n\n\n\n\n\n\nThese last three models give similar information as the first three, i.e. the main predictors for the hazard are \nkarno\n and \ncelltype\n, with treatment being non-significant. Moreover, by explicitely including the time variable in the formula, we see that it is not significant; this is evidence that the true hazard is exponential.\n\n\nSession information\n\n\n## R version 3.3.2 (2016-10-31)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 16.04.1 LTS\n## \n## attached base packages:\n## [1] splines   stats4    stats     graphics  grDevices utils     datasets \n## [8] methods   base     \n## \n## other attached packages:\n## [1] casebase_0.0.9000 VGAM_1.0-3        eha_2.4-4         survival_2.40-1  \n## \n## loaded via a namespace (and not attached):\n##  [1] Rcpp_0.12.9       knitr_1.15.1      magrittr_1.5     \n##  [4] munsell_0.4.3     colorspace_1.3-2  lattice_0.20-34  \n##  [7] plyr_1.8.4        stringr_1.1.0     tools_3.3.2      \n## [10] grid_3.3.2        data.table_1.10.0 gtable_0.2.0     \n## [13] pacman_0.4.1      htmltools_0.3.5   assertthat_0.1   \n## [16] lazyeval_0.2.0    yaml_2.1.14       rprojroot_1.2    \n## [19] digest_0.6.12     tibble_1.2        Matrix_1.2-7.1   \n## [22] ggplot2_2.2.1     evaluate_0.10     rmarkdown_1.3    \n## [25] stringi_1.1.2     scales_0.4.1      backports_1.0.5\n\n\n\n\n\nReferences", 
            "title": "Smooth Hazard"
        }, 
        {
            "location": "/smoothHazard/#methodological-details", 
            "text": "Case-base sampling was proposed by Hanley   Miettinen  -@hanley2009fitting  as a way to fit smooth-in-time parametric hazard functions via logistic regression. The main idea, which was first proposed by Mantel  -@mantel1973synthetic  and then later developped by Efron  -@efron1977efficiency , is to sample person-moments, i.e. discrete time points along an subject's follow-up time, in order to construct a base series against which the case series can be compared.  This approach allows the explicit inclusion of the time variable into the model, which enables the user to fit a wide class of parametric hazard functions. For example, including time linearly recovers the Gompertz hazard, whereas including time  logarithmically  recovers the Weibull hazard; not including time at all corresponds to the exponential hazard.  The theoretical properties of this approach have been studied in Saarela   Arjas  -@saarela2015non  and Saarela  -@saarela2015case .", 
            "title": "Methodological details"
        }, 
        {
            "location": "/smoothHazard/#first-example", 
            "text": "The first example we discuss uses the well-known  veteran  dataset, which is part of the  survival  package. As we can see below, there is almost no censoring, and therefore we can get a good visual representation of the survival function:  library ( survival ) \ndata ( veteran )  table ( veteran $ status )   ## \n##   0   1 \n##   9 128  evtimes  -  veteran $ time [ veteran $ status  ==   1 ] \nhist ( evtimes ,  nclass = 30 ,  main = ,  xlab = Survival time (days) ,  col = gray90 ,  probability = TRUE ) \ntgrid  -   seq ( 0 ,   1000 ,  by = 10 ) \nlines ( tgrid ,  dexp ( tgrid ,  rate = 1.0 / mean ( evtimes )),  \n      lwd = 2 ,  lty = 2 ,  col = red )    As we can see, the empirical survival function ressembles an exponential distribution.  We will first try to estimate the hazard function parametrically using some well-known regression routines. But first, we will reformat the data slightly.  veteran $ prior  -   factor ( veteran $ prior ,  levels  =   c ( 0 ,   10 )) \nveteran $ celltype  -   factor ( veteran $ celltype ,  \n                           levels  =   c ( large ,   squamous ,   smallcell ,   adeno )) \nveteran $ trt  -   factor ( veteran $ trt ,  levels  =   c ( 1 ,   2 ))   Using the  eha  package, we can fit a Weibull form, with different values of the shape parameter. For  s h a p e \u2004=\u20041, we get an exponential distribution:  pacman :: p_load ( eha ) \ny  -   with ( veteran ,  Surv ( time ,  status )) \n\nmodel1  -  weibreg ( y  ~  karno  +  diagtime  +  age  +  prior  +  celltype  +  trt ,  \n                  data  =  veteran ,  shape  =   1 )  summary ( model1 )   ## Call:\n## weibreg(formula = y ~ karno + diagtime + age + prior + celltype + \n##     trt, data = veteran, shape = 1)\n## \n## Covariate           Mean       Coef Exp(Coef)  se(Coef)    Wald p\n## karno              68.419    -0.031     0.970     0.005     0.000 \n## diagtime            8.139     0.000     1.000     0.009     0.974 \n## age                57.379    -0.006     0.994     0.009     0.505 \n## prior \n##                0    0.653     0         1           (reference)\n##               10    0.347     0.049     1.051     0.227     0.827 \n## celltype \n##            large    0.269     0         1           (reference)\n##         squamous    0.421    -0.377     0.686     0.273     0.166 \n##        smallcell    0.206     0.443     1.557     0.261     0.090 \n##            adeno    0.104     0.736     2.087     0.294     0.012 \n## trt \n##                1    0.477     0         1           (reference)\n##                2    0.523     0.220     1.246     0.199     0.269 \n## \n## log(scale)                    2.811    16.633     0.713     0.000 \n## \n##  Shape is fixed at  1 \n## \n## Events                    128 \n## Total time at risk         16663 \n## Max. log. likelihood      -716.16 \n## LR test statistic         70.1 \n## Degrees of freedom        8 \n## Overall p-value           4.64229e-12  If we take  s h a p e \u2004=\u20040, the shape parameter is estimated along with the regression coefficients:  model2  -  weibreg ( y  ~  karno  +  diagtime  +  age  +  prior  +  celltype  +  trt ,  \n                  data  =  veteran ,  shape  =   0 )  summary ( model2 )   ## Call:\n## weibreg(formula = y ~ karno + diagtime + age + prior + celltype + \n##     trt, data = veteran, shape = 0)\n## \n## Covariate           Mean       Coef Exp(Coef)  se(Coef)    Wald p\n## karno              68.419    -0.032     0.968     0.005     0.000 \n## diagtime            8.139     0.001     1.001     0.009     0.955 \n## age                57.379    -0.007     0.993     0.009     0.476 \n## prior \n##                0    0.653     0         1           (reference)\n##               10    0.347     0.047     1.048     0.229     0.836 \n## celltype \n##            large    0.269     0         1           (reference)\n##         squamous    0.421    -0.428     0.651     0.278     0.123 \n##        smallcell    0.206     0.462     1.587     0.262     0.078 \n##            adeno    0.104     0.792     2.208     0.300     0.008 \n## trt \n##                1    0.477     0         1           (reference)\n##                2    0.523     0.246     1.279     0.203     0.224 \n## \n## log(scale)                    2.864    17.537     0.671     0.000 \n## log(shape)                    0.075     1.077     0.066     0.261 \n## \n## Events                    128 \n## Total time at risk         16663 \n## Max. log. likelihood      -715.55 \n## LR test statistic         65.1 \n## Degrees of freedom        8 \n## Overall p-value           4.65393e-11  Finally, we can also fit a Cox proportional hazard:  model3  -  coxph ( y  ~  karno  +  diagtime  +  age  +  prior  +  celltype  +  trt ,  \n                data  =  veteran )  summary ( model3 )   ## Call:\n## coxph(formula = y ~ karno + diagtime + age + prior + celltype + \n##     trt, data = veteran)\n## \n##   n= 137, number of events= 128 \n## \n##                         coef  exp(coef)   se(coef)      z Pr( |z|)    \n## karno             -3.282e-02  9.677e-01  5.508e-03 -5.958 2.55e-09 ***\n## diagtime           8.132e-05  1.000e+00  9.136e-03  0.009  0.99290    \n## age               -8.706e-03  9.913e-01  9.300e-03 -0.936  0.34920    \n## prior10            7.159e-02  1.074e+00  2.323e-01  0.308  0.75794    \n## celltypesquamous  -4.013e-01  6.695e-01  2.827e-01 -1.420  0.15574    \n## celltypesmallcell  4.603e-01  1.584e+00  2.662e-01  1.729  0.08383 .  \n## celltypeadeno      7.948e-01  2.214e+00  3.029e-01  2.624  0.00869 ** \n## trt2               2.946e-01  1.343e+00  2.075e-01  1.419  0.15577    \n## ---\n## Signif. codes:  0  ***  0.001  **  0.01  *  0.05  .  0.1     1\n## \n##                   exp(coef) exp(-coef) lower .95 upper .95\n## karno                0.9677     1.0334    0.9573    0.9782\n## diagtime             1.0001     0.9999    0.9823    1.0182\n## age                  0.9913     1.0087    0.9734    1.0096\n## prior10              1.0742     0.9309    0.6813    1.6937\n## celltypesquamous     0.6695     1.4938    0.3847    1.1651\n## celltypesmallcell    1.5845     0.6311    0.9403    2.6699\n## celltypeadeno        2.2139     0.4517    1.2228    4.0084\n## trt2                 1.3426     0.7448    0.8939    2.0166\n## \n## Concordance= 0.736  (se = 0.03 )\n## Rsquare= 0.364   (max possible= 0.999 )\n## Likelihood ratio test= 62.1  on 8 df,   p=1.799e-10\n## Wald test            = 62.37  on 8 df,   p=1.596e-10\n## Score (logrank) test = 66.74  on 8 df,   p=2.186e-11  As we can see, all three models are significant, and they give similar information:  karno  and  celltype  are significant predictors, both treatment is not.  The method available in this package makes use of  case-base sampling . That is, person-moments are randomly sampled across the entire follow-up time, with some moments corresponding to cases and others to controls. By sampling person-moments instead of individuals, we can then use logistic regression to fit smooth-in-time parametric hazard functions. See the previous section for more details.  First, we will look at the follow-up time by using population-time plots:  nobs  -   nrow ( y ) \nftime  -  veteran $ time\nord  -   order ( ftime ,  decreasing = TRUE ) \nplot ( 0 ,  type = n ,  xlim = c ( 0 ,   max ( ftime )),  ylim = c ( 0 ,  nobs ),  \n     xlab = Follow-up time ,  ylab = Population ) \nsegments ( rep ( 0.0 ,  nobs ),   1 : nobs ,  ftime [ ord ],   1 : nobs ,  col = gray25 ) \ncases  -  veteran $ status  ==   1 \npoints (( ftime [ ord ])[ cases [ ord ]],   ( 1 : nobs )[ cases [ ord ]],  pch = 20 ,  col = red ,  cex = 0.5 )    Population-time plots are a useful way of visualizing the total follow-up experience, where individuals appear on the y-axis, and follow-up time on the x-axis; each individual's follow-up time is represented by a gray line segment. For convenience, we have ordered the patients according to their time-to-event, and each event is represented by a red dot. The censored observations (of which there is only a few) correspond to the grey lines which do not end with a red dot.  Next, we use case-base sampling to fit a parametric hazard function via logistic regression. First, we will include time as a linear term; as noted above, this corresponds to an Gompertz hazard.  library ( casebase )   ## Loading required package: VGAM\n\n## Loading required package: stats4\n\n## Loading required package: splines\n\n## \n## Attaching package:  VGAM \n\n## The following objects are masked from  package:eha :\n## \n##     dgompertz, dmakeham, pgompertz, pmakeham, qgompertz, qmakeham,\n##     rgompertz, rmakeham  model4  -  fitSmoothHazard ( status  ~  time  +  karno  +  diagtime  +  age  +  prior  + \n             celltype  +  trt ,  data  =  veteran ,  ratio = 100 ,  type  =   uniform )   ##  time  will be used as the time variable  summary ( model4 )   ## \n## Call:\n## glm(formula = formula, family = binomial, data = sampleData)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -0.3883  -0.1516  -0.1209  -0.1004   3.4010  \n## \n## Coefficients:\n##                     Estimate Std. Error z value Pr( |z|)    \n## (Intercept)       -2.6972916  0.7327516  -3.681 0.000232 ***\n## time               0.0003558  0.0006467   0.550 0.582226    \n## karno             -0.0299930  0.0052469  -5.716 1.09e-08 ***\n## diagtime           0.0020130  0.0090887   0.221 0.824717    \n## age               -0.0098983  0.0093166  -1.062 0.288037    \n## prior10            0.0193600  0.2335128   0.083 0.933925    \n## celltypesquamous  -0.3717107  0.2850600  -1.304 0.192243    \n## celltypesmallcell  0.4900360  0.2632186   1.862 0.062644 .  \n## celltypeadeno      0.7575487  0.3014872   2.513 0.011981 *  \n## trt2               0.2054208  0.2014424   1.020 0.307847    \n## ---\n## Signif. codes:  0  ***  0.001  **  0.01  *  0.05  .  0.1     1\n## \n## (Dispersion parameter for binomial family taken to be 1)\n## \n##     Null deviance: 1436.2  on 12927  degrees of freedom\n## Residual deviance: 1368.6  on 12918  degrees of freedom\n## AIC: 1388.6\n## \n## Number of Fisher Scoring iterations: 8  Since the output object from  fitSmoothHazard  inherits from the  glm  class, we see a familiar result when using the function  summary .  The main purpose of fitting smooth hazard functions is that it is then relatively easy to compute absolute risks. For example, we can use the function  absoluteRisk  to compute the mean absolute risk at 90 days, which can then be compared to the empirical measure.  absoluteRisk ( object  =  model4 ,  time  =   90 )   ## [1] 0.5756621  mean ( ftime  =   90 )   ## [1] 0.5547445  We can also fit a Weibull hazard by using a logarithmic term for time:  model5  -  fitSmoothHazard ( status  ~   log ( time )   +  karno  +  diagtime  +  age  +  prior  + \n             celltype  +  trt ,  data  =  veteran ,  ratio = 100 ,  type  =   uniform )   ##  time  will be used as the time variable  summary ( model5 )   ## \n## Call:\n## glm(formula = formula, family = binomial, data = sampleData)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -0.4382  -0.1512  -0.1200  -0.0970   3.4049  \n## \n## Coefficients:\n##                    Estimate Std. Error z value Pr( |z|)    \n## (Intercept)       -3.174679   0.744870  -4.262 2.03e-05 ***\n## log(time)          0.079176   0.071940   1.101   0.2711    \n## karno             -0.031588   0.005474  -5.770 7.91e-09 ***\n## diagtime           0.001787   0.009432   0.190   0.8497    \n## age               -0.004762   0.009241  -0.515   0.6063    \n## prior10            0.061890   0.232954   0.266   0.7905    \n## celltypesquamous  -0.455905   0.278424  -1.637   0.1015    \n## celltypesmallcell  0.451326   0.264522   1.706   0.0880 .  \n## celltypeadeno      0.758645   0.301447   2.517   0.0118 *  \n## trt2               0.245839   0.202616   1.213   0.2250    \n## ---\n## Signif. codes:  0  ***  0.001  **  0.01  *  0.05  .  0.1     1\n## \n## (Dispersion parameter for binomial family taken to be 1)\n## \n##     Null deviance: 1436.2  on 12927  degrees of freedom\n## Residual deviance: 1367.2  on 12918  degrees of freedom\n## AIC: 1387.2\n## \n## Number of Fisher Scoring iterations: 8  With case-base sampling, it is straightforward to fit a semi-parametric hazard function using splines, which can then be used to estimate the mean absolute risk.  # Fit a spline for time  library ( splines ) \nmodel6  -  fitSmoothHazard ( status  ~  bs ( time )   +  karno  +  diagtime  +  age  +  prior  + \n             celltype  +  trt ,  data  =  veteran ,  ratio = 100 ,  type  =   uniform )   ##  time  will be used as the time variable  summary ( model6 )   ## \n## Call:\n## glm(formula = formula, family = binomial, data = sampleData)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -0.4419  -0.1524  -0.1188  -0.0962   3.5366  \n## \n## Coefficients:\n##                    Estimate Std. Error z value Pr( |z|)    \n## (Intercept)       -2.802692   0.733669  -3.820 0.000133 ***\n## bs(time)1          1.462042   1.020984   1.432 0.152145    \n## bs(time)2         -2.563804   1.744367  -1.470 0.141626    \n## bs(time)3          1.761402   0.986614   1.785 0.074213 .  \n## karno             -0.033064   0.005477  -6.037 1.57e-09 ***\n## diagtime           0.002782   0.009481   0.293 0.769201    \n## age               -0.006766   0.009401  -0.720 0.471725    \n## prior10           -0.026913   0.233568  -0.115 0.908265    \n## celltypesquamous  -0.398003   0.282814  -1.407 0.159339    \n## celltypesmallcell  0.436973   0.265627   1.645 0.099957 .  \n## celltypeadeno      0.737056   0.304795   2.418 0.015597 *  \n## trt2               0.221856   0.206569   1.074 0.282820    \n## ---\n## Signif. codes:  0  ***  0.001  **  0.01  *  0.05  .  0.1     1\n## \n## (Dispersion parameter for binomial family taken to be 1)\n## \n##     Null deviance: 1436.2  on 12927  degrees of freedom\n## Residual deviance: 1362.6  on 12916  degrees of freedom\n## AIC: 1386.6\n## \n## Number of Fisher Scoring iterations: 8  absoluteRisk ( object  =  model6 ,  time  =   90 )   ## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## [1] 0.5769713  As we can see from the summary, there is little evidence that splines actually improve the fit. Moreover, we can see that estimated individual absolute risks are essentially the same when using either a linear term or splines:  linearRisk  -  absoluteRisk ( object  =  model4 ,  time  =   90 ,  newdata  =  veteran ) \nsplineRisk  -  absoluteRisk ( object  =  model6 ,  time  =   90 ,  newdata  =  veteran )   ## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases\n\n## Warning in bs(time, degree = 3L, knots = numeric(0), Boundary.knots =\n## c(0.00457866885699332, : some  x  values beyond boundary knots may cause\n## ill-conditioned bases  plot ( linearRisk ,  splineRisk , \n     xlab = Linear ,  ylab  =   Splines ,  pch = 19 ) \nabline ( a = 0 ,  b = 1 ,  lty = 2 ,  lwd = 2 ,  col = red )    These last three models give similar information as the first three, i.e. the main predictors for the hazard are  karno  and  celltype , with treatment being non-significant. Moreover, by explicitely including the time variable in the formula, we see that it is not significant; this is evidence that the true hazard is exponential.", 
            "title": "First example"
        }, 
        {
            "location": "/smoothHazard/#session-information", 
            "text": "## R version 3.3.2 (2016-10-31)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 16.04.1 LTS\n## \n## attached base packages:\n## [1] splines   stats4    stats     graphics  grDevices utils     datasets \n## [8] methods   base     \n## \n## other attached packages:\n## [1] casebase_0.0.9000 VGAM_1.0-3        eha_2.4-4         survival_2.40-1  \n## \n## loaded via a namespace (and not attached):\n##  [1] Rcpp_0.12.9       knitr_1.15.1      magrittr_1.5     \n##  [4] munsell_0.4.3     colorspace_1.3-2  lattice_0.20-34  \n##  [7] plyr_1.8.4        stringr_1.1.0     tools_3.3.2      \n## [10] grid_3.3.2        data.table_1.10.0 gtable_0.2.0     \n## [13] pacman_0.4.1      htmltools_0.3.5   assertthat_0.1   \n## [16] lazyeval_0.2.0    yaml_2.1.14       rprojroot_1.2    \n## [19] digest_0.6.12     tibble_1.2        Matrix_1.2-7.1   \n## [22] ggplot2_2.2.1     evaluate_0.10     rmarkdown_1.3    \n## [25] stringi_1.1.2     scales_0.4.1      backports_1.0.5", 
            "title": "Session information"
        }, 
        {
            "location": "/smoothHazard/#references", 
            "text": "", 
            "title": "References"
        }, 
        {
            "location": "/popTime/", 
            "text": "Load Required Packages\n\n\nlibrary\n(\nknitr\n)\n\n\nlibrary\n(\ndata.table\n)\n\n\nlibrary\n(\nmagrittr\n)\n\n\nlibrary\n(\nggplot2\n)\n\n\nlibrary\n(\nsurvival\n)\n\n\nlibrary\n(\ncasebase\n)\n\n\n\n\n\n\nVeteran Data\n\n\n# veteran data in library(survival)\n\ndata\n(\nveteran\n)\n\nstr\n(\nveteran\n)\n\n\n\n\n\n\n## \ndata.frame\n:    137 obs. of  8 variables:\n##  $ trt     : num  1 1 1 1 1 1 1 1 1 1 ...\n##  $ celltype: Factor w/ 4 levels \nsquamous\n,\nsmallcell\n,..: 1 1 1 1 1 1 1 1 1 1 ...\n##  $ time    : num  72 411 228 126 118 10 82 110 314 100 ...\n##  $ status  : num  1 1 1 1 1 1 1 1 1 0 ...\n##  $ karno   : num  60 70 60 60 70 20 40 80 50 70 ...\n##  $ diagtime: num  7 5 3 9 11 5 10 29 18 6 ...\n##  $ age     : num  69 64 38 63 65 49 69 68 43 70 ...\n##  $ prior   : num  0 10 0 10 10 0 10 0 0 0 ...\n\n\n\n\n\n# create \npopTime\n object\n\npopTimeData \n-\n popTime\n(\ndata \n=\n veteran\n)\n\n\n\n\n\n\n## \ntime\n will be used as the time variable\n\n## \nstatus\n will be used as the event variable\n\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n\n\n\n\n\n# object of class \npopTime\n\n\nclass\n(\npopTimeData\n)\n\n\n\n\n\n\n## [1] \npopTime\n    \ndata.table\n \ndata.frame\n\n\n\n\n\n\n# plot method for objects of class \npopTime\n\nplot\n(\npopTimeData\n)\n\n\n\n\n\n\n\n\nStratified by treatment population time plot\n\n\n# stratified by treatment population time plot\n\nveteran \n-\n \ntransform\n(\nveteran\n,\n trt \n=\n \nfactor\n(\ntrt\n,\n levels \n=\n \n1\n:\n2\n,\n\n                                           labels \n=\n \nc\n(\nstandard\n,\n \ntest\n)))\n\n\n\n# create \npopTimeExposure\n object\n\npopTimeData \n-\n popTime\n(\ndata \n=\n veteran\n,\n exposure \n=\n \ntrt\n)\n\n\n\n\n\n\n## \ntime\n will be used as the time variable\n\n## \nstatus\n will be used as the event variable\n\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n\n\n\n\n\n# object of class \npopTimeExposure\n\n\nclass\n(\npopTimeData\n)\n\n\n\n\n\n\n## [1] \npopTimeExposure\n \nlist\n\n\n\n\n\n\n# plot method for objects of class \npopTimeExposure\n\nplot\n(\npopTimeData\n)\n\n\n\n\n\n\n\n\nStem Cell Data\n\n\nbmt \n-\n read.csv\n(\nhttps://raw.githubusercontent.com/sahirbhatnagar/casebase/master/inst/extdata/bmtcrr.csv\n)\n\nstr\n(\nbmt\n)\n\n\n\n\n\n\n## \ndata.frame\n:    177 obs. of  7 variables:\n##  $ Sex   : Factor w/ 2 levels \nF\n,\nM\n: 2 1 2 1 1 2 2 1 2 1 ...\n##  $ D     : Factor w/ 2 levels \nALL\n,\nAML\n: 1 2 1 1 1 1 1 1 1 1 ...\n##  $ Phase : Factor w/ 4 levels \nCR1\n,\nCR2\n,\nCR3\n,..: 4 2 3 2 2 4 1 1 1 4 ...\n##  $ Age   : int  48 23 7 26 36 17 7 17 26 8 ...\n##  $ Status: int  2 1 0 2 2 2 0 2 0 1 ...\n##  $ Source: Factor w/ 2 levels \nBM+PB\n,\nPB\n: 1 1 1 1 1 1 1 1 1 1 ...\n##  $ ftime : num  0.67 9.5 131.77 24.03 1.47 ...\n\n\n\n\n\n# create \npopTime\n object\n\npopTimeData \n-\n popTime\n(\ndata \n=\n bmt\n,\n time \n=\n \nftime\n)\n\n\n\n\n\n\n## \nStatus\n will be used as the event variable\n\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n\n\n\n\n\n# object of class \npopTime\n\n\nclass\n(\npopTimeData\n)\n\n\n\n\n\n\n## [1] \npopTime\n    \ndata.table\n \ndata.frame\n\n\n\n\n\n\n# plot method for objects of class \npopTime\n\nplot\n(\npopTimeData\n)\n\n\n\n\n\n\n\n\nStratified by Disease\n\n\n# stratified by Disease population time plot\n\n\n# Disease (lymphoblastic or myeloblastic leukemia,\n\n\n# abbreviated as ALL and AML, respectively)\n\n\n\n# create \npopTimeExposure\n object\n\npopTimeData \n-\n popTime\n(\ndata \n=\n bmt\n,\n time \n=\n \nftime\n,\n exposure \n=\n \nD\n)\n\n\n\n\n\n\n## \nStatus\n will be used as the event variable\n\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n\n\n\n\n\n# object of class \npopTimeExposure\n\n\nclass\n(\npopTimeData\n)\n\n\n\n\n\n\n## [1] \npopTimeExposure\n \nlist\n\n\n\n\n\n\n# plot method for objects of class \npopTimeExposure\n\nplot\n(\npopTimeData\n)\n\n\n\n\n\n\n\n\n# stratify by gender\n\npopTimeData \n-\n popTime\n(\ndata \n=\n bmt\n,\n time \n=\n \nftime\n,\n exposure \n=\n \nSex\n)\n\n\n\n\n\n\n## \nStatus\n will be used as the event variable\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n\n\n\n\n\nplot\n(\npopTimeData\n)\n\n\n\n\n\n\n\n\nStanford Heart Transplant Data\n\n\n# data from library(survival)\n\ndata\n(\nheart\n)\n\nstr\n(\nheart\n)\n\n\n\n\n\n\n## \ndata.frame\n:    172 obs. of  8 variables:\n##  $ start     : num  0 0 0 1 0 36 0 0 0 51 ...\n##  $ stop      : num  50 6 1 16 36 39 18 3 51 675 ...\n##  $ event     : num  1 1 0 1 0 1 1 1 0 1 ...\n##  $ age       : num  -17.16 3.84 6.3 6.3 -7.74 ...\n##  $ year      : num  0.123 0.255 0.266 0.266 0.49 ...\n##  $ surgery   : num  0 0 0 0 0 0 0 0 0 0 ...\n##  $ transplant: Factor w/ 2 levels \n0\n,\n1\n: 1 1 1 2 1 2 1 1 1 2 ...\n##  $ id        : num  1 2 3 3 4 4 5 6 7 7 ...\n\n\n\n\n\n# create time variable for time in study\n\nheart \n-\n \ntransform\n(\nheart\n,\n\n                   time \n=\n stop \n-\n start\n,\n\n                   transplant \n=\n \nfactor\n(\ntransplant\n,\n\n                                       labels \n=\n \nc\n(\nno transplant\n,\n \ntransplant\n)))\n\n\n\n# stratify by transplant indicator\n\npopTimeData \n-\n popTime\n(\ndata \n=\n heart\n,\n exposure \n=\n \ntransplant\n)\n\n\n\n\n\n\n## \ntime\n will be used as the time variable\n\n## \nevent\n will be used as the event variable\n\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n\n## Sampling only from individuals who never experienced\n##                     the event of interest\n\n\n\n\n\n# can specify a legend\n\nplot\n(\npopTimeData\n,\n legend \n=\n \nTRUE\n)\n\n\n\n\n\n\n\n\nNCCTG Lung Cancer Data\n\n\n# data from library(survival)\n\ndata\n(\ncancer\n)\n\nstr\n(\ncancer\n)\n\n\n\n\n\n\n## \ndata.frame\n:    228 obs. of  10 variables:\n##  $ inst     : num  3 3 3 5 1 12 7 11 1 7 ...\n##  $ time     : num  306 455 1010 210 883 ...\n##  $ status   : num  2 2 1 2 2 1 2 2 2 2 ...\n##  $ age      : num  74 68 56 57 60 74 68 71 53 61 ...\n##  $ sex      : num  1 1 1 1 1 1 2 2 1 1 ...\n##  $ ph.ecog  : num  1 0 0 1 0 1 2 2 1 2 ...\n##  $ ph.karno : num  90 90 90 90 100 50 70 60 70 70 ...\n##  $ pat.karno: num  100 90 90 60 90 80 60 80 80 70 ...\n##  $ meal.cal : num  1175 1225 NA 1150 NA ...\n##  $ wt.loss  : num  NA 15 15 11 0 0 10 1 16 34 ...\n\n\n\n\n\n# since the event indicator \nstatus\n is numeric, it must have\n\n\n# 0 for censored and 1 for event\n\ncancer \n-\n \ntransform\n(\ncancer\n,\n\n                    status \n=\n status \n-\n \n1\n,\n\n                    sex \n=\n \nfactor\n(\nsex\n,\n levels \n=\n \n1\n:\n2\n,\n\n                                 labels \n=\n \nc\n(\nMale\n,\n \nFemale\n)))\n\n\n\n\n# population time plot\n\n\n# redistributing the red points among those who never experienced an event\n\n\n# because there are enough available at each time point\n\npopTimeData \n-\n popTime\n(\ndata \n=\n cancer\n)\n\n\n\n\n\n\n## \ntime\n will be used as the time variable\n\n## \nstatus\n will be used as the event variable\n\n## Sampling only from individuals who never experienced\n##                     the event of interest\n\n\n\n\n\nplot\n(\npopTimeData\n)\n\n\n\n\n\n\n\n\nStratified by gender\n\n\npopTimeData \n-\n popTime\n(\ndata \n=\n cancer\n,\n exposure \n=\n \nsex\n)\n\n\n\n\n\n\n## \ntime\n will be used as the time variable\n\n## \nstatus\n will be used as the event variable\n\n## Sampling only from individuals who never experienced\n##                     the event of interest\n\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n\n\n\n\n\n# can change the plot aesthetics\n\nplot\n(\npopTimeData\n,\n\n     line.width \n=\n \n0.2\n,\n line.colour \n=\n \nblack\n,\n\n     point.size \n=\n \n1\n,\n point.colour \n=\n \ncyan\n)\n\n\n\n\n\n\n\n\nSimulated Data Example\n\n\nSimulate the data\n\n\nset.seed\n(\n1\n)\n\nnobs \n-\n \n5000\n\n\n\n# simulation parameters\n\na1 \n-\n \n1.0\n\nb1 \n-\n \n200\n\na2 \n-\n \n1.0\n\nb2 \n-\n \n50\n\nc1 \n-\n \n0.0\n\nc2 \n-\n \n0.0\n\n\n\n# end of study time\n\neost \n-\n \n10\n\n\n\n# e event type 0-censored, 1-event of interest, 2-competing event\n\n\n# t observed time/endpoint\n\n\n# z is a binary covariate\n\nDTsim \n-\n data.table\n(\nID \n=\n \nseq_len\n(\nnobs\n),\n z\n=\nrbinom\n(\nnobs\n,\n \n1\n,\n \n0.5\n))\n\nsetkey\n(\nDTsim\n,\n ID\n)\n\nDTsim\n[,\n`:=`\n \n(\nevent_time \n=\n rweibull\n(\nnobs\n,\n a1\n,\n b1 \n*\n \nexp\n(\nz \n*\n c1\n)\n^\n(\n-1\n/\na1\n)),\n\n             competing_time \n=\n rweibull\n(\nnobs\n,\n a2\n,\n b2 \n*\n \nexp\n(\nz \n*\n c2\n)\n^\n(\n-1\n/\na2\n)),\n\n             end_of_study_time \n=\n eost\n)]\n\n\n\n\n\n\n##         ID z event_time competing_time end_of_study_time\n##    1:    1 0  667.64719     136.890050                10\n##    2:    2 0  206.73147      19.532835                10\n##    3:    3 1  278.16256      15.368960                10\n##    4:    4 1   25.75304     109.776451                10\n##    5:    5 0  229.15406     153.249168                10\n##   ---                                                   \n## 4996: 4996 0   62.37659     136.007260                10\n## 4997: 4997 0  139.18781      21.246797                10\n## 4998: 4998 0  137.28346       3.674155                10\n## 4999: 4999 0  113.08585       7.509247                10\n## 5000: 5000 0   85.33457      11.294627                10\n\n\n\n\n\nDTsim\n[,\n`:=`\n(\nevent \n=\n \n1\n \n*\n \n(\nevent_time \n competing_time\n)\n \n+\n\n                \n2\n \n*\n \n(\nevent_time \n=\n competing_time\n),\n\n            time \n=\n \npmin\n(\nevent_time\n,\n competing_time\n))]\n\n\n\n\n\n\n##         ID z event_time competing_time end_of_study_time event       time\n##    1:    1 0  667.64719     136.890050                10     2 136.890050\n##    2:    2 0  206.73147      19.532835                10     2  19.532835\n##    3:    3 1  278.16256      15.368960                10     2  15.368960\n##    4:    4 1   25.75304     109.776451                10     1  25.753040\n##    5:    5 0  229.15406     153.249168                10     2 153.249168\n##   ---                                                                    \n## 4996: 4996 0   62.37659     136.007260                10     1  62.376591\n## 4997: 4997 0  139.18781      21.246797                10     2  21.246797\n## 4998: 4998 0  137.28346       3.674155                10     2   3.674155\n## 4999: 4999 0  113.08585       7.509247                10     2   7.509247\n## 5000: 5000 0   85.33457      11.294627                10     2  11.294627\n\n\n\n\n\nDTsim\n[\ntime \n=\n end_of_study_time\n,\n event \n:=\n \n0\n]\n\n\n\n\n\n\n##         ID z event_time competing_time end_of_study_time event       time\n##    1:    1 0  667.64719     136.890050                10     0 136.890050\n##    2:    2 0  206.73147      19.532835                10     0  19.532835\n##    3:    3 1  278.16256      15.368960                10     0  15.368960\n##    4:    4 1   25.75304     109.776451                10     0  25.753040\n##    5:    5 0  229.15406     153.249168                10     0 153.249168\n##   ---                                                                    \n## 4996: 4996 0   62.37659     136.007260                10     0  62.376591\n## 4997: 4997 0  139.18781      21.246797                10     0  21.246797\n## 4998: 4998 0  137.28346       3.674155                10     2   3.674155\n## 4999: 4999 0  113.08585       7.509247                10     2   7.509247\n## 5000: 5000 0   85.33457      11.294627                10     0  11.294627\n\n\n\n\n\nDTsim\n[\ntime \n=\n end_of_study_time\n,\n time\n:=\nend_of_study_time\n]\n\n\n\n\n\n\n##         ID z event_time competing_time end_of_study_time event      time\n##    1:    1 0  667.64719     136.890050                10     0 10.000000\n##    2:    2 0  206.73147      19.532835                10     0 10.000000\n##    3:    3 1  278.16256      15.368960                10     0 10.000000\n##    4:    4 1   25.75304     109.776451                10     0 10.000000\n##    5:    5 0  229.15406     153.249168                10     0 10.000000\n##   ---                                                                   \n## 4996: 4996 0   62.37659     136.007260                10     0 10.000000\n## 4997: 4997 0  139.18781      21.246797                10     0 10.000000\n## 4998: 4998 0  137.28346       3.674155                10     2  3.674155\n## 4999: 4999 0  113.08585       7.509247                10     2  7.509247\n## 5000: 5000 0   85.33457      11.294627                10     0 10.000000\n\n\n\n\n\nPopulation Time Plot\n\n\n# create \npopTime\n object\n\npopTimeData \n-\n popTime\n(\ndata \n=\n DTsim\n,\n time \n=\n \ntime\n,\n event \n=\n \nevent\n)\n\n\n\n\n\n\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n\n\n\n\n\nplot\n(\npopTimeData\n)\n\n\n\n\n\n\n\n\nStratified by Binary Covariate z\n\n\n# stratified by binary covariate z\n\npopTimeData \n-\n popTime\n(\ndata \n=\n DTsim\n,\n time \n=\n \ntime\n,\n event \n=\n \nevent\n,\n exposure \n=\n \nz\n)\n\n\n\n\n\n\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n\n\n\n\n\n# we can line up the plots side-by-side instead of one on top of the other\n\nplot\n(\npopTimeData\n,\n ncol \n=\n \n2\n)\n\n\n\n\n\n\n\n\nSession information\n\n\n## R version 3.3.2 (2016-10-31)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 16.04.1 LTS\n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] casebase_0.1.0    survival_2.40-1   ggplot2_2.2.1     magrittr_1.5     \n## [5] data.table_1.10.4 knitr_1.15.1     \n## \n## loaded via a namespace (and not attached):\n##  [1] Rcpp_0.12.9        splines_3.3.2      munsell_0.4.3     \n##  [4] lattice_0.20-34    colorspace_1.3-2   stringr_1.2.0     \n##  [7] plyr_1.8.4         tools_3.3.2        grid_3.3.2        \n## [10] gtable_0.2.0       htmltools_0.3.6    yaml_2.1.14       \n## [13] lazyeval_0.2.0     rprojroot_1.2      digest_0.6.12     \n## [16] assertthat_0.1     tibble_1.2         Matrix_1.2-7.1    \n## [19] VGAM_1.0-3         evaluate_0.10      rmarkdown_1.3.9003\n## [22] labeling_0.3       stringi_1.1.2      scales_0.4.1      \n## [25] backports_1.0.5    stats4_3.3.2", 
            "title": "Population Time Plots"
        }, 
        {
            "location": "/popTime/#load-required-packages", 
            "text": "library ( knitr )  library ( data.table )  library ( magrittr )  library ( ggplot2 )  library ( survival )  library ( casebase )", 
            "title": "Load Required Packages"
        }, 
        {
            "location": "/popTime/#veteran-data", 
            "text": "# veteran data in library(survival) \ndata ( veteran ) \nstr ( veteran )   ##  data.frame :    137 obs. of  8 variables:\n##  $ trt     : num  1 1 1 1 1 1 1 1 1 1 ...\n##  $ celltype: Factor w/ 4 levels  squamous , smallcell ,..: 1 1 1 1 1 1 1 1 1 1 ...\n##  $ time    : num  72 411 228 126 118 10 82 110 314 100 ...\n##  $ status  : num  1 1 1 1 1 1 1 1 1 0 ...\n##  $ karno   : num  60 70 60 60 70 20 40 80 50 70 ...\n##  $ diagtime: num  7 5 3 9 11 5 10 29 18 6 ...\n##  $ age     : num  69 64 38 63 65 49 69 68 43 70 ...\n##  $ prior   : num  0 10 0 10 10 0 10 0 0 0 ...  # create  popTime  object \npopTimeData  -  popTime ( data  =  veteran )   ##  time  will be used as the time variable\n\n##  status  will be used as the event variable\n\n## Sampling from all remaining individuals under study,\n##                     regardless of event status  # object of class  popTime  class ( popTimeData )   ## [1]  popTime      data.table   data.frame   # plot method for objects of class  popTime \nplot ( popTimeData )", 
            "title": "Veteran Data"
        }, 
        {
            "location": "/popTime/#stratified-by-treatment-population-time-plot", 
            "text": "# stratified by treatment population time plot \nveteran  -   transform ( veteran ,  trt  =   factor ( trt ,  levels  =   1 : 2 , \n                                           labels  =   c ( standard ,   test )))  # create  popTimeExposure  object \npopTimeData  -  popTime ( data  =  veteran ,  exposure  =   trt )   ##  time  will be used as the time variable\n\n##  status  will be used as the event variable\n\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n## Sampling from all remaining individuals under study,\n##                     regardless of event status  # object of class  popTimeExposure  class ( popTimeData )   ## [1]  popTimeExposure   list   # plot method for objects of class  popTimeExposure \nplot ( popTimeData )", 
            "title": "Stratified by treatment population time plot"
        }, 
        {
            "location": "/popTime/#stem-cell-data", 
            "text": "bmt  -  read.csv ( https://raw.githubusercontent.com/sahirbhatnagar/casebase/master/inst/extdata/bmtcrr.csv ) \nstr ( bmt )   ##  data.frame :    177 obs. of  7 variables:\n##  $ Sex   : Factor w/ 2 levels  F , M : 2 1 2 1 1 2 2 1 2 1 ...\n##  $ D     : Factor w/ 2 levels  ALL , AML : 1 2 1 1 1 1 1 1 1 1 ...\n##  $ Phase : Factor w/ 4 levels  CR1 , CR2 , CR3 ,..: 4 2 3 2 2 4 1 1 1 4 ...\n##  $ Age   : int  48 23 7 26 36 17 7 17 26 8 ...\n##  $ Status: int  2 1 0 2 2 2 0 2 0 1 ...\n##  $ Source: Factor w/ 2 levels  BM+PB , PB : 1 1 1 1 1 1 1 1 1 1 ...\n##  $ ftime : num  0.67 9.5 131.77 24.03 1.47 ...  # create  popTime  object \npopTimeData  -  popTime ( data  =  bmt ,  time  =   ftime )   ##  Status  will be used as the event variable\n\n## Sampling from all remaining individuals under study,\n##                     regardless of event status  # object of class  popTime  class ( popTimeData )   ## [1]  popTime      data.table   data.frame   # plot method for objects of class  popTime \nplot ( popTimeData )", 
            "title": "Stem Cell Data"
        }, 
        {
            "location": "/popTime/#stratified-by-disease", 
            "text": "# stratified by Disease population time plot  # Disease (lymphoblastic or myeloblastic leukemia,  # abbreviated as ALL and AML, respectively)  # create  popTimeExposure  object \npopTimeData  -  popTime ( data  =  bmt ,  time  =   ftime ,  exposure  =   D )   ##  Status  will be used as the event variable\n\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n## Sampling from all remaining individuals under study,\n##                     regardless of event status  # object of class  popTimeExposure  class ( popTimeData )   ## [1]  popTimeExposure   list   # plot method for objects of class  popTimeExposure \nplot ( popTimeData )    # stratify by gender \npopTimeData  -  popTime ( data  =  bmt ,  time  =   ftime ,  exposure  =   Sex )   ##  Status  will be used as the event variable\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n## Sampling from all remaining individuals under study,\n##                     regardless of event status  plot ( popTimeData )", 
            "title": "Stratified by Disease"
        }, 
        {
            "location": "/popTime/#stanford-heart-transplant-data", 
            "text": "# data from library(survival) \ndata ( heart ) \nstr ( heart )   ##  data.frame :    172 obs. of  8 variables:\n##  $ start     : num  0 0 0 1 0 36 0 0 0 51 ...\n##  $ stop      : num  50 6 1 16 36 39 18 3 51 675 ...\n##  $ event     : num  1 1 0 1 0 1 1 1 0 1 ...\n##  $ age       : num  -17.16 3.84 6.3 6.3 -7.74 ...\n##  $ year      : num  0.123 0.255 0.266 0.266 0.49 ...\n##  $ surgery   : num  0 0 0 0 0 0 0 0 0 0 ...\n##  $ transplant: Factor w/ 2 levels  0 , 1 : 1 1 1 2 1 2 1 1 1 2 ...\n##  $ id        : num  1 2 3 3 4 4 5 6 7 7 ...  # create time variable for time in study \nheart  -   transform ( heart , \n                   time  =  stop  -  start , \n                   transplant  =   factor ( transplant , \n                                       labels  =   c ( no transplant ,   transplant )))  # stratify by transplant indicator \npopTimeData  -  popTime ( data  =  heart ,  exposure  =   transplant )   ##  time  will be used as the time variable\n\n##  event  will be used as the event variable\n\n## Sampling from all remaining individuals under study,\n##                     regardless of event status\n\n## Sampling only from individuals who never experienced\n##                     the event of interest  # can specify a legend \nplot ( popTimeData ,  legend  =   TRUE )", 
            "title": "Stanford Heart Transplant Data"
        }, 
        {
            "location": "/popTime/#ncctg-lung-cancer-data", 
            "text": "# data from library(survival) \ndata ( cancer ) \nstr ( cancer )   ##  data.frame :    228 obs. of  10 variables:\n##  $ inst     : num  3 3 3 5 1 12 7 11 1 7 ...\n##  $ time     : num  306 455 1010 210 883 ...\n##  $ status   : num  2 2 1 2 2 1 2 2 2 2 ...\n##  $ age      : num  74 68 56 57 60 74 68 71 53 61 ...\n##  $ sex      : num  1 1 1 1 1 1 2 2 1 1 ...\n##  $ ph.ecog  : num  1 0 0 1 0 1 2 2 1 2 ...\n##  $ ph.karno : num  90 90 90 90 100 50 70 60 70 70 ...\n##  $ pat.karno: num  100 90 90 60 90 80 60 80 80 70 ...\n##  $ meal.cal : num  1175 1225 NA 1150 NA ...\n##  $ wt.loss  : num  NA 15 15 11 0 0 10 1 16 34 ...  # since the event indicator  status  is numeric, it must have  # 0 for censored and 1 for event \ncancer  -   transform ( cancer , \n                    status  =  status  -   1 , \n                    sex  =   factor ( sex ,  levels  =   1 : 2 , \n                                 labels  =   c ( Male ,   Female )))  # population time plot  # redistributing the red points among those who never experienced an event  # because there are enough available at each time point \npopTimeData  -  popTime ( data  =  cancer )   ##  time  will be used as the time variable\n\n##  status  will be used as the event variable\n\n## Sampling only from individuals who never experienced\n##                     the event of interest  plot ( popTimeData )", 
            "title": "NCCTG Lung Cancer Data"
        }, 
        {
            "location": "/popTime/#stratified-by-gender", 
            "text": "popTimeData  -  popTime ( data  =  cancer ,  exposure  =   sex )   ##  time  will be used as the time variable\n\n##  status  will be used as the event variable\n\n## Sampling only from individuals who never experienced\n##                     the event of interest\n\n## Sampling from all remaining individuals under study,\n##                     regardless of event status  # can change the plot aesthetics \nplot ( popTimeData , \n     line.width  =   0.2 ,  line.colour  =   black , \n     point.size  =   1 ,  point.colour  =   cyan )", 
            "title": "Stratified by gender"
        }, 
        {
            "location": "/popTime/#simulated-data-example", 
            "text": "", 
            "title": "Simulated Data Example"
        }, 
        {
            "location": "/popTime/#simulate-the-data", 
            "text": "set.seed ( 1 ) \nnobs  -   5000  # simulation parameters \na1  -   1.0 \nb1  -   200 \na2  -   1.0 \nb2  -   50 \nc1  -   0.0 \nc2  -   0.0  # end of study time \neost  -   10  # e event type 0-censored, 1-event of interest, 2-competing event  # t observed time/endpoint  # z is a binary covariate \nDTsim  -  data.table ( ID  =   seq_len ( nobs ),  z = rbinom ( nobs ,   1 ,   0.5 )) \nsetkey ( DTsim ,  ID ) \nDTsim [, `:=`   ( event_time  =  rweibull ( nobs ,  a1 ,  b1  *   exp ( z  *  c1 ) ^ ( -1 / a1 )), \n             competing_time  =  rweibull ( nobs ,  a2 ,  b2  *   exp ( z  *  c2 ) ^ ( -1 / a2 )), \n             end_of_study_time  =  eost )]   ##         ID z event_time competing_time end_of_study_time\n##    1:    1 0  667.64719     136.890050                10\n##    2:    2 0  206.73147      19.532835                10\n##    3:    3 1  278.16256      15.368960                10\n##    4:    4 1   25.75304     109.776451                10\n##    5:    5 0  229.15406     153.249168                10\n##   ---                                                   \n## 4996: 4996 0   62.37659     136.007260                10\n## 4997: 4997 0  139.18781      21.246797                10\n## 4998: 4998 0  137.28346       3.674155                10\n## 4999: 4999 0  113.08585       7.509247                10\n## 5000: 5000 0   85.33457      11.294627                10  DTsim [, `:=` ( event  =   1   *   ( event_time   competing_time )   + \n                 2   *   ( event_time  =  competing_time ), \n            time  =   pmin ( event_time ,  competing_time ))]   ##         ID z event_time competing_time end_of_study_time event       time\n##    1:    1 0  667.64719     136.890050                10     2 136.890050\n##    2:    2 0  206.73147      19.532835                10     2  19.532835\n##    3:    3 1  278.16256      15.368960                10     2  15.368960\n##    4:    4 1   25.75304     109.776451                10     1  25.753040\n##    5:    5 0  229.15406     153.249168                10     2 153.249168\n##   ---                                                                    \n## 4996: 4996 0   62.37659     136.007260                10     1  62.376591\n## 4997: 4997 0  139.18781      21.246797                10     2  21.246797\n## 4998: 4998 0  137.28346       3.674155                10     2   3.674155\n## 4999: 4999 0  113.08585       7.509247                10     2   7.509247\n## 5000: 5000 0   85.33457      11.294627                10     2  11.294627  DTsim [ time  =  end_of_study_time ,  event  :=   0 ]   ##         ID z event_time competing_time end_of_study_time event       time\n##    1:    1 0  667.64719     136.890050                10     0 136.890050\n##    2:    2 0  206.73147      19.532835                10     0  19.532835\n##    3:    3 1  278.16256      15.368960                10     0  15.368960\n##    4:    4 1   25.75304     109.776451                10     0  25.753040\n##    5:    5 0  229.15406     153.249168                10     0 153.249168\n##   ---                                                                    \n## 4996: 4996 0   62.37659     136.007260                10     0  62.376591\n## 4997: 4997 0  139.18781      21.246797                10     0  21.246797\n## 4998: 4998 0  137.28346       3.674155                10     2   3.674155\n## 4999: 4999 0  113.08585       7.509247                10     2   7.509247\n## 5000: 5000 0   85.33457      11.294627                10     0  11.294627  DTsim [ time  =  end_of_study_time ,  time := end_of_study_time ]   ##         ID z event_time competing_time end_of_study_time event      time\n##    1:    1 0  667.64719     136.890050                10     0 10.000000\n##    2:    2 0  206.73147      19.532835                10     0 10.000000\n##    3:    3 1  278.16256      15.368960                10     0 10.000000\n##    4:    4 1   25.75304     109.776451                10     0 10.000000\n##    5:    5 0  229.15406     153.249168                10     0 10.000000\n##   ---                                                                   \n## 4996: 4996 0   62.37659     136.007260                10     0 10.000000\n## 4997: 4997 0  139.18781      21.246797                10     0 10.000000\n## 4998: 4998 0  137.28346       3.674155                10     2  3.674155\n## 4999: 4999 0  113.08585       7.509247                10     2  7.509247\n## 5000: 5000 0   85.33457      11.294627                10     0 10.000000", 
            "title": "Simulate the data"
        }, 
        {
            "location": "/popTime/#population-time-plot", 
            "text": "# create  popTime  object \npopTimeData  -  popTime ( data  =  DTsim ,  time  =   time ,  event  =   event )   ## Sampling from all remaining individuals under study,\n##                     regardless of event status  plot ( popTimeData )", 
            "title": "Population Time Plot"
        }, 
        {
            "location": "/popTime/#stratified-by-binary-covariate-z", 
            "text": "# stratified by binary covariate z \npopTimeData  -  popTime ( data  =  DTsim ,  time  =   time ,  event  =   event ,  exposure  =   z )   ## Sampling from all remaining individuals under study,\n##                     regardless of event status\n## Sampling from all remaining individuals under study,\n##                     regardless of event status  # we can line up the plots side-by-side instead of one on top of the other \nplot ( popTimeData ,  ncol  =   2 )", 
            "title": "Stratified by Binary Covariate z"
        }, 
        {
            "location": "/popTime/#session-information", 
            "text": "## R version 3.3.2 (2016-10-31)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 16.04.1 LTS\n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] casebase_0.1.0    survival_2.40-1   ggplot2_2.2.1     magrittr_1.5     \n## [5] data.table_1.10.4 knitr_1.15.1     \n## \n## loaded via a namespace (and not attached):\n##  [1] Rcpp_0.12.9        splines_3.3.2      munsell_0.4.3     \n##  [4] lattice_0.20-34    colorspace_1.3-2   stringr_1.2.0     \n##  [7] plyr_1.8.4         tools_3.3.2        grid_3.3.2        \n## [10] gtable_0.2.0       htmltools_0.3.6    yaml_2.1.14       \n## [13] lazyeval_0.2.0     rprojroot_1.2      digest_0.6.12     \n## [16] assertthat_0.1     tibble_1.2         Matrix_1.2-7.1    \n## [19] VGAM_1.0-3         evaluate_0.10      rmarkdown_1.3.9003\n## [22] labeling_0.3       stringi_1.1.2      scales_0.4.1      \n## [25] backports_1.0.5    stats4_3.3.2", 
            "title": "Session information"
        }, 
        {
            "location": "/competingRisk/", 
            "text": "Data\n\n\nWe will use the same data that was used in Scrucca \net al\n \n-@scrucca2010regression\n. The data is available on the main author's \nwebsite\n.\n\n\nDT \n-\n read.csv\n(\nsystem.file\n(\nextdata\n,\n \nbmtcrr.csv\n,\n package \n=\n \ncasebase\n))\n\n\nhead\n(\nDT\n)\n\n\n\n\n\n\n##   Sex   D   Phase Age Status Source  ftime\n## 1   M ALL Relapse  48      2  BM+PB   0.67\n## 2   F AML     CR2  23      1  BM+PB   9.50\n## 3   M ALL     CR3   7      0  BM+PB 131.77\n## 4   F ALL     CR2  26      2  BM+PB  24.03\n## 5   F ALL     CR2  36      2  BM+PB   1.47\n## 6   M ALL Relapse  17      2  BM+PB   2.23\n\n\n\n\n\nWe will perform a competing risk analysis on data from 177 patients who received a stem cell transplant for acute leukemia. The event of interest in relapse, but other competing causes (e.g. transplant-related death) need to be taken into account. We also want to take into account the effect of several covariates such as Sex, Disease (lymphoblastic or myeloblastic leukemia, abbreviated as ALL and AML, respectively), Phase at transplant (Relapse, CR1, CR2, CR3), Source of stem cells (bone marrow and peripheral blood, coded as BM+PB, or peripheral blood, coded as PB), and Age. Below, we reproduce their Table 1:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\n\n\nDescription\n\n\nStatistical summary\n\n\n\n\n\n\n\n\n\n\nSex\n\n\nSex\n\n\nM=Male (100) \n F=Female (77)\n\n\n\n\n\n\nD\n\n\nDisease\n\n\nALL (73) \n AML (104)\n\n\n\n\n\n\nPhase\n\n\nPhase\n\n\nCR1 (47) \n CR2 (45) \n CR3 (12) \n Relapse (73)\n\n\n\n\n\n\nSource\n\n\nType of transplant\n\n\nBM+PB (21) \n PB (156)\n\n\n\n\n\n\nAge\n\n\nAge of patient (years)\n\n\n4\u201362 \n 30.47 (13.04)\n\n\n\n\n\n\nFtime\n\n\nFailure time (months)\n\n\n0.13\u2013131.77 \n 20.28 (30.78)\n\n\n\n\n\n\nStatus\n\n\nStatus indicator\n\n\n0=censored (46) \n 1=relapse (56) \n 2=competing event (75)\n\n\n\n\n\n\n\n\n\nThe statistical summary is generated differently for continuous and categorical variables:\n\n\n\n\n\n\nFor continuous variables, we are given the range, followed by the mean and standard deviation.\n\n\n\n\n\n\nFor categorical variables, we are given the counts for each category.\n\n\n\n\n\n\nNote that failure time can also correspond to censoring.\n\n\nPopulation-time plots\n\n\nIn order to try and visualize the incidence density of relapse, we can look at a population-time plot: on the X-axis we have time, and on the Y-axis we have the size of the risk set at a particular time point. Failure times associated to the event of interest can then be highlighted on the plot using red dots.\n\n\nnobs \n-\n \nnrow\n(\nDT\n)\n\nftime \n-\n DT\n$\nftime\nord \n-\n \norder\n(\nftime\n,\n decreasing\n=\nFALSE\n)\n\n\n\n# We split the person-moments in four categories:\n\n\n# 1) at-risk\n\n\n# 2) main event\n\n\n# 3) competing event\n\n\n# 4) censored\n\nyCoords \n-\n \ncbind\n(\ncumsum\n(\nDT\n[\nord\n,\n \nStatus\n]\n \n==\n \n2\n),\n \n                 \ncumsum\n(\nDT\n[\nord\n,\n \nStatus\n]\n \n==\n \n1\n),\n\n                 \ncumsum\n(\nDT\n[\nord\n,\n \nStatus\n]\n \n==\n \n0\n))\n\nyCoords \n-\n \ncbind\n(\nyCoords\n,\n nobs \n-\n \nrowSums\n(\nyCoords\n))\n\n\n\n# Plot only at-risk\n\nplot\n(\n0\n,\n type\n=\nn\n,\n xlim\n=\nc\n(\n0\n,\n \nmax\n(\nftime\n)),\n ylim\n=\nc\n(\n0\n,\n nobs\n),\n \n     xlab\n=\nFollow-up time\n,\n ylab\n=\nPopulation\n)\n\npolygon\n(\nc\n(\n0\n,\n \n0\n,\n ftime\n[\nord\n],\n \nmax\n(\nftime\n),\n \n0\n),\n\n        \nc\n(\n0\n,\n nobs\n,\n yCoords\n[,\n4\n],\n \n0\n,\n \n0\n),\n col \n=\n \ngrey90\n)\n\ncases \n-\n DT\n[,\n \nStatus\n]\n \n==\n \n1\n\n\n\n# randomly move the cases vertically\n\nmoved_cases \n-\n yCoords\n[\ncases\n[\nord\n],\n \n4\n]\n \n*\n runif\n(\nsum\n(\ncases\n))\n\npoints\n((\nftime\n[\nord\n])[\ncases\n[\nord\n]],\n moved_cases\n,\n pch\n=\n20\n,\n col\n=\nred\n,\n cex\n=\n1\n)\n\n\n\n\n\n\n\n\nWe can right away draw a few conclusions from this plot: first of all, we get a sense of how quickly the size of the risk set changes over time. We also see that the incidence density is non-constant: most relapses occur before 15 months. Finally, we also see that the risk set keeps shrinking after the last event has occured; this could be due to either censoring or the competing event.\n\n\nTo get an idea of whether only relapse is responsible for the shrinking of the risk set in the first few months of follow-up, we can also keep track of how many events have occured at each time point:\n\n\n# Plot at-risk and events\n\nplot\n(\n0\n,\n type\n=\nn\n,\n xlim\n=\nc\n(\n0\n,\n \nmax\n(\nftime\n)),\n ylim\n=\nc\n(\n0\n,\n nobs\n),\n \n     xlab\n=\nFollow-up time\n,\n ylab\n=\nPopulation\n)\n\npolygon\n(\nx \n=\n \nc\n(\n0\n,\nftime\n[\nord\n],\n \nmax\n(\nftime\n),\n \n0\n),\n \n        y \n=\n \nc\n(\n0\n,\n yCoords\n[,\n2\n],\n \n0\n,\n \n0\n),\n \n        col \n=\n \nfirebrick3\n)\n\npolygon\n(\nx \n=\n \nc\n(\n0\n,\n ftime\n[\nord\n],\n ftime\n[\nrev\n(\nord\n)],\n \n0\n,\n \n0\n),\n\n        y \n=\n \nc\n(\n0\n,\n yCoords\n[,\n2\n],\n \nrev\n(\nyCoords\n[,\n2\n]\n \n+\n yCoords\n[,\n4\n]),\n nobs\n,\n \n0\n),\n \n        col \n=\n \ngrey90\n)\n\n\n\n# randomly move the cases vertically\n\nmoved_cases \n-\n yCoords\n[\ncases\n[\nord\n],\n \n2\n]\n \n+\n yCoords\n[\ncases\n[\nord\n],\n \n4\n]\n \n*\n runif\n(\nsum\n(\ncases\n))\n\npoints\n((\nftime\n[\nord\n])[\ncases\n[\nord\n]],\n moved_cases\n,\n pch\n=\n20\n,\n col\n=\nred\n,\n cex\n=\n1\n)\n\nlegend\n(\ntopright\n,\n legend\n=\nc\n(\nRelapse\n,\n \nAt-risk\n),\n \n       col\n=\nc\n(\nfirebrick3\n,\n \ngrey90\n),\n\n       pch\n=\n15\n)\n\n\n\n\n\n\n\n\nTherefore, there is also censoring and loss due to competing events happening in the first few months. However, with this plot, we can't differentiate bwetween the two contributions. For this reason we can also keep track of the number of competing events at each time point:\n\n\nplot\n(\n0\n,\n type\n=\nn\n,\n xlim\n=\nc\n(\n0\n,\n \nmax\n(\nftime\n)),\n ylim\n=\nc\n(\n0\n,\n nobs\n),\n \n     xlab\n=\nFollow-up time\n,\n ylab\n=\nPopulation\n)\n\npolygon\n(\nx \n=\n \nc\n(\n0\n,\n \nmax\n(\nftime\n),\n \nmax\n(\nftime\n),\n \n0\n),\n\n        y \n=\n \nc\n(\n0\n,\n \n0\n,\n nobs\n,\n nobs\n),\n col \n=\n \nwhite\n)\n\n\n# Event of interest\n\npolygon\n(\nx \n=\n \nc\n(\n0\n,\nftime\n[\nord\n],\n \nmax\n(\nftime\n),\n \n0\n),\n \n        y \n=\n \nc\n(\n0\n,\n yCoords\n[,\n2\n],\n \n0\n,\n \n0\n),\n \n        col \n=\n \nfirebrick3\n)\n\n\n# Risk set\n\npolygon\n(\nx \n=\n \nc\n(\n0\n,\n ftime\n[\nord\n],\n ftime\n[\nrev\n(\nord\n)],\n \n0\n,\n \n0\n),\n\n        y \n=\n \nc\n(\n0\n,\n yCoords\n[,\n2\n],\n \nrev\n(\nyCoords\n[,\n2\n]\n \n+\n yCoords\n[,\n4\n]),\n nobs\n,\n \n0\n),\n \n        col \n=\n \ngrey90\n)\n\n\n# Competing event\n\npolygon\n(\nx \n=\n \nc\n(\n0\n,\n ftime\n[\nord\n],\n \nmax\n(\nftime\n),\n \n0\n),\n \n        y \n=\n \nc\n(\nnobs\n,\n nobs \n-\n yCoords\n[,\n1\n],\n nobs\n,\n nobs\n),\n \n        col \n=\n \ndodgerblue2\n)\n\n\n\n# randomly move the cases vertically\n\nmoved_cases \n-\n yCoords\n[\ncases\n[\nord\n],\n \n2\n]\n \n+\n yCoords\n[\ncases\n[\nord\n],\n \n4\n]\n \n*\n runif\n(\nsum\n(\ncases\n))\n\npoints\n((\nftime\n[\nord\n])[\ncases\n[\nord\n]],\n moved_cases\n,\n pch\n=\n20\n,\n col\n=\nred\n,\n cex\n=\n1\n)\n\nlegend\n(\ntopright\n,\n legend\n=\nc\n(\nRelapse\n,\n \nCompeting event\n,\n \nAt-risk\n),\n \n       col\n=\nc\n(\nfirebrick3\n,\n \ndodgerblue2\n,\n \ngrey90\n),\n\n       pch\n=\n15\n)\n\n\n\n\n\n\n\n\nFrom this last plot, we can see that there is no censoring during the first 10 months. Moreover, we see that the last competing event occurs around 20 months. Putting all this information together, we have evidence of two types of patients: very sick patients who either relapse or have a competing event early on, and healthier patients who are eventually lost to follow-up.\n\n\nAnalysis\n\n\nWe now turn to the analysis of this dataset. The population-time plots above give evidence of non-constant hazard; therefore, we will explicitely include time in the model. Note that we also include all other variables as possible confounders. First, we include time as a linear term:\n\n\nlibrary\n(\ncasebase\n)\n\nmodel1 \n-\n fitSmoothHazard\n(\nStatus \n~\n ftime \n+\n Sex \n+\n D \n+\n Phase \n+\n Source \n+\n Age\n,\n \n                          data \n=\n DT\n,\n \n                          ratio \n=\n \n1000\n,\n \n                          type \n=\n \nuniform\n,\n \n                          time \n=\n \nftime\n)\n\n\nsummary\n(\nmodel1\n)\n\n\n\n\n\n\n## \n## Call:\n## vglm(formula = formula, family = multinomial(refLevel = 1), data = sampleData)\n## \n## Pearson residuals:\n##                         Min       1Q   Median        3Q    Max\n## log(mu[,2]/mu[,1]) -0.07252 -0.02214 -0.01238 -0.004705 144.48\n## log(mu[,3]/mu[,1]) -0.10874 -0.02844 -0.01188 -0.002703  63.81\n## \n## Coefficients:\n##                 Estimate Std. Error z value Pr(\n|z|)    \n## (Intercept):1  -3.471431   0.677926  -5.121 3.04e-07 ***\n## (Intercept):2  -2.553408   0.456314  -5.596 2.20e-08 ***\n## ftime:1        -0.069339   0.014637  -4.737 2.17e-06 ***\n## ftime:2        -0.103005   0.018040  -5.710 1.13e-08 ***\n## SexM:1         -0.283357   0.281482  -1.007 0.314097    \n## SexM:2         -0.393539   0.234499  -1.678 0.093306 .  \n## DAML:1         -0.615106   0.299529  -2.054 0.040016 *  \n## DAML:2         -0.128529   0.275187  -0.467 0.640457    \n## PhaseCR2:1      0.164757   0.465452   0.354 0.723360    \n## PhaseCR2:2      0.284447   0.328909   0.865 0.387138    \n## PhaseCR3:1      0.497277   0.689157   0.722 0.470557    \n## PhaseCR3:2      0.247308   0.522180   0.474 0.635780    \n## PhaseRelapse:1  1.425731   0.390068   3.655 0.000257 ***\n## PhaseRelapse:2  0.760170   0.305914   2.485 0.012958 *  \n## SourcePB:1      0.458579   0.569546   0.805 0.420725    \n## SourcePB:2     -1.085761   0.353344  -3.073 0.002120 ** \n## Age:1          -0.006502   0.011923  -0.545 0.585557    \n## Age:2           0.028097   0.009939   2.827 0.004699 ** \n## ---\n## Signif. codes:  0 \n***\n 0.001 \n**\n 0.01 \n*\n 0.05 \n.\n 0.1 \n \n 1\n## \n## Number of linear predictors:  2 \n## \n## Names of linear predictors: log(mu[,2]/mu[,1]), log(mu[,3]/mu[,1])\n## \n## Dispersion Parameter for multinomial family:   1\n## \n## Residual deviance: 2010.853 on 262244 degrees of freedom\n## \n## Log-likelihood: -1005.426 on 262244 degrees of freedom\n## \n## Number of iterations: 13 \n## \n## Reference group is level  1  of the response\n\n\n\n\n\nBecause of the results in Turgeon \net al\n \n-@turgeonCompRisk\n, the standard errors we obtain from the multinomial logit fit are asymptotically correct, and therefore can be used to construct asymptotic confidence intervals.\n\n\nFrom this summary, we see that time is indeed significant, as is Phase (only relapse vs. CR1). Interestingly, we see that the type of disease is only significant for the event of interest, whereas the type of transplant and the age of the patient are only significant for the competing event.\n\n\nNext, we include the logarithm of time in the model (which leads to a Weibull hazard):\n\n\nmodel2 \n-\n fitSmoothHazard\n(\nStatus \n~\n \nlog\n(\nftime\n)\n \n+\n Sex \n+\n D \n+\n Phase \n+\n Source \n+\n Age\n,\n \n                          data \n=\n DT\n,\n \n                          ratio \n=\n \n1000\n,\n \n                          type \n=\n \nuniform\n,\n \n                          time \n=\n \nftime\n)\n\n\nsummary\n(\nmodel2\n)\n\n\n\n\n\n\n## \n## Call:\n## vglm(formula = formula, family = multinomial(refLevel = 1), data = sampleData)\n## \n## Pearson residuals:\n##                        Min       1Q   Median      3Q   Max\n## log(mu[,2]/mu[,1]) -0.1586 -0.02172 -0.01488 -0.0112 91.50\n## log(mu[,3]/mu[,1]) -0.2549 -0.02465 -0.01753 -0.0144 68.98\n## \n## Coefficients:\n##                 Estimate Std. Error z value Pr(\n|z|)    \n## (Intercept):1  -3.973373   0.697541  -5.696 1.22e-08 ***\n## (Intercept):2  -3.072860   0.458942  -6.696 2.15e-11 ***\n## log(ftime):1   -0.326885   0.068810  -4.751 2.03e-06 ***\n## log(ftime):2   -0.409365   0.055783  -7.339 2.16e-13 ***\n## SexM:1         -0.432316   0.291868  -1.481 0.138552    \n## SexM:2         -0.508326   0.239301  -2.124 0.033653 *  \n## DAML:1         -0.695149   0.301673  -2.304 0.021205 *  \n## DAML:2         -0.159079   0.284358  -0.559 0.575868    \n## PhaseCR2:1      0.256405   0.467125   0.549 0.583075    \n## PhaseCR2:2      0.394798   0.329179   1.199 0.230396    \n## PhaseCR3:1      0.437725   0.705766   0.620 0.535118    \n## PhaseCR3:2      0.109218   0.530056   0.206 0.836752    \n## PhaseRelapse:1  1.485346   0.392256   3.787 0.000153 ***\n## PhaseRelapse:2  0.851896   0.307304   2.772 0.005569 ** \n## SourcePB:1      0.679091   0.594402   1.142 0.253256    \n## SourcePB:2     -0.954314   0.364461  -2.618 0.008834 ** \n## Age:1          -0.003986   0.011672  -0.341 0.732740    \n## Age:2           0.028748   0.009829   2.925 0.003445 ** \n## ---\n## Signif. codes:  0 \n***\n 0.001 \n**\n 0.01 \n*\n 0.05 \n.\n 0.1 \n \n 1\n## \n## Number of linear predictors:  2 \n## \n## Names of linear predictors: log(mu[,2]/mu[,1]), log(mu[,3]/mu[,1])\n## \n## Dispersion Parameter for multinomial family:   1\n## \n## Residual deviance: 2106.207 on 262244 degrees of freedom\n## \n## Log-likelihood: -1053.103 on 262244 degrees of freedom\n## \n## Number of iterations: 11 \n## \n## Reference group is level  1  of the response\n\n\n\n\n\nAs we can see, the results are similar to the ones with a Gompertz hazard, although Sex is now significant for the competing event.\n\n\nFinally, using splines, we can be quite flexible about the way the hazard depends on time:\n\n\nmodel3 \n-\n fitSmoothHazard\n(\n\n    Status \n~\n splines\n::\nbs\n(\nftime\n)\n \n+\n Sex \n+\n D \n+\n Phase \n+\n Source \n+\n Age\n,\n \n    data \n=\n DT\n,\n \n    ratio \n=\n \n1000\n,\n \n    type \n=\n \nuniform\n,\n \n    time \n=\n \nftime\n)\n\n\nsummary\n(\nmodel3\n)\n\n\n\n\n\n\n## \n## Call:\n## vglm(formula = formula, family = multinomial(refLevel = 1), data = sampleData)\n## \n## Pearson residuals:\n##                         Min       1Q    Median         3Q   Max\n## log(mu[,2]/mu[,1]) -0.06550 -0.02251 -0.012716 -2.422e-03 179.5\n## log(mu[,3]/mu[,1]) -0.08964 -0.03003 -0.004575 -2.351e-06 116.1\n## \n## Coefficients:\n##                         Estimate Std. Error z value Pr(\n|z|)    \n## (Intercept):1          -3.691355   0.708817  -5.208 1.91e-07 ***\n## (Intercept):2          -3.222215   0.510159  -6.316 2.68e-10 ***\n## splines::bs(ftime)1:1  -0.065812   2.262489  -0.029 0.976794    \n## splines::bs(ftime)1:2   7.050859   3.651841   1.931 0.053512 .  \n## splines::bs(ftime)2:1 -16.116417   8.171818  -1.972 0.048587 *  \n## splines::bs(ftime)2:2 -77.611389  25.533712  -3.040 0.002369 ** \n## splines::bs(ftime)3:1  -2.492098  10.137201  -0.246 0.805809    \n## splines::bs(ftime)3:2  -2.618538  22.372792  -0.117 0.906827    \n## SexM:1                 -0.312318   0.282712  -1.105 0.269280    \n## SexM:2                 -0.432579   0.235026  -1.841 0.065686 .  \n## DAML:1                 -0.637589   0.298442  -2.136 0.032648 *  \n## DAML:2                 -0.150842   0.272504  -0.554 0.579894    \n## PhaseCR2:1              0.177523   0.465556   0.381 0.702971    \n## PhaseCR2:2              0.295998   0.330082   0.897 0.369857    \n## PhaseCR3:1              0.535253   0.694359   0.771 0.440790    \n## PhaseCR3:2              0.263867   0.525446   0.502 0.615543    \n## PhaseRelapse:1          1.492639   0.395031   3.779 0.000158 ***\n## PhaseRelapse:2          0.891996   0.310906   2.869 0.004117 ** \n## SourcePB:1              0.387227   0.572715   0.676 0.498961    \n## SourcePB:2             -1.161639   0.356260  -3.261 0.001112 ** \n## Age:1                  -0.004674   0.011952  -0.391 0.695744    \n## Age:2                   0.030146   0.010007   3.012 0.002591 ** \n## ---\n## Signif. codes:  0 \n***\n 0.001 \n**\n 0.01 \n*\n 0.05 \n.\n 0.1 \n \n 1\n## \n## Number of linear predictors:  2 \n## \n## Names of linear predictors: log(mu[,2]/mu[,1]), log(mu[,3]/mu[,1])\n## \n## Dispersion Parameter for multinomial family:   1\n## \n## Residual deviance: 1995.088 on 262240 degrees of freedom\n## \n## Log-likelihood: -997.5441 on 262240 degrees of freedom\n## \n## Number of iterations: 18 \n## \n## Reference group is level  1  of the response\n\n\n\n\n\nAgain, we see that the results are quite similar for this third model.\n\n\nAbsolute risk\n\n\nWe now look at the 2-year risk of relapse:\n\n\nlinearRisk \n-\n absoluteRisk\n(\nobject \n=\n model1\n,\n time \n=\n \n24\n,\n newdata \n=\n DT\n[\n1\n:\n10\n,])\n\nlogRisk \n-\n absoluteRisk\n(\nobject \n=\n model2\n,\n time \n=\n \n24\n,\n newdata \n=\n DT\n[\n1\n:\n10\n,])\n\nsplineRisk \n-\n absoluteRisk\n(\nobject \n=\n model3\n,\n time \n=\n \n24\n,\n newdata \n=\n DT\n[\n1\n:\n10\n,])\n\n\n\n\n\n\nplot\n(\nlinearRisk\n[,\n1\n],\n logRisk\n[,\n1\n],\n\n     xlab\n=\nLinear\n,\n ylab \n=\n \nLog/Spline\n,\n pch\n=\n19\n,\n\n     xlim\n=\nc\n(\n0\n,\n1\n),\n ylim\n=\nc\n(\n0\n,\n1\n),\n col\n=\nred\n)\n\npoints\n(\nlinearRisk\n[,\n1\n],\n splineRisk\n[,\n1\n],\n\n       col \n=\n \nblue\n,\n pch\n=\n19\n)\n\nabline\n(\na\n=\n0\n,\n b\n=\n1\n,\n lty\n=\n2\n,\n lwd\n=\n2\n)\n\nlegend\n(\ntopleft\n,\n legend\n=\nc\n(\nLog\n,\n \nSpline\n),\n\n       pch\n=\n19\n,\n col\n=\nc\n(\nred\n,\n \nblue\n))\n\n\n\n\n\n\n\n\nAs we can see, Model 1 and Model 2 give different absolute risk predictions, but the linear and the spline model actually give very similar results. We can also estimate the mean absolute risk for the entire dataset:\n\n\n# The first column corresponds to the event of interest\n\n\nmean\n(\nlinearRisk\n[,\n1\n])\n\n\n\n\n\n\n## [1] 0.204129\n\n\n\n\n\nmean\n(\nlogRisk\n[,\n1\n])\n\n\n\n\n\n\n## [1] 0.1506065\n\n\n\n\n\nmean\n(\nsplineRisk\n[,\n1\n])\n\n\n\n\n\n\n## [1] 0.1136662\n\n\n\n\n\nSession information\n\n\n## R version 3.3.1 (2016-06-21)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 16.10\n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] casebase_0.1.0\n## \n## loaded via a namespace (and not attached):\n##  [1] Rcpp_0.12.9      knitr_1.15.1     magrittr_1.5     splines_3.3.1   \n##  [5] munsell_0.4.3    lattice_0.20-33  colorspace_1.3-1 stringr_1.2.0   \n##  [9] plyr_1.8.4       tools_3.3.1      grid_3.3.1       data.table_1.9.6\n## [13] gtable_0.2.0     htmltools_0.3.5  survival_2.39-5  yaml_2.1.14     \n## [17] lazyeval_0.2.0   rprojroot_1.2    digest_0.6.12    assertthat_0.1  \n## [21] tibble_1.2       Matrix_1.2-6     ggplot2_2.2.0    VGAM_1.0-2      \n## [25] evaluate_0.10    rmarkdown_1.3    stringi_1.1.2    scales_0.4.1    \n## [29] backports_1.0.5  stats4_3.3.1     chron_2.3-47\n\n\n\n\n\nReferences", 
            "title": "Competing Risk"
        }, 
        {
            "location": "/competingRisk/#data", 
            "text": "We will use the same data that was used in Scrucca  et al   -@scrucca2010regression . The data is available on the main author's  website .  DT  -  read.csv ( system.file ( extdata ,   bmtcrr.csv ,  package  =   casebase ))  head ( DT )   ##   Sex   D   Phase Age Status Source  ftime\n## 1   M ALL Relapse  48      2  BM+PB   0.67\n## 2   F AML     CR2  23      1  BM+PB   9.50\n## 3   M ALL     CR3   7      0  BM+PB 131.77\n## 4   F ALL     CR2  26      2  BM+PB  24.03\n## 5   F ALL     CR2  36      2  BM+PB   1.47\n## 6   M ALL Relapse  17      2  BM+PB   2.23  We will perform a competing risk analysis on data from 177 patients who received a stem cell transplant for acute leukemia. The event of interest in relapse, but other competing causes (e.g. transplant-related death) need to be taken into account. We also want to take into account the effect of several covariates such as Sex, Disease (lymphoblastic or myeloblastic leukemia, abbreviated as ALL and AML, respectively), Phase at transplant (Relapse, CR1, CR2, CR3), Source of stem cells (bone marrow and peripheral blood, coded as BM+PB, or peripheral blood, coded as PB), and Age. Below, we reproduce their Table 1:          Variable  Description  Statistical summary      Sex  Sex  M=Male (100)   F=Female (77)    D  Disease  ALL (73)   AML (104)    Phase  Phase  CR1 (47)   CR2 (45)   CR3 (12)   Relapse (73)    Source  Type of transplant  BM+PB (21)   PB (156)    Age  Age of patient (years)  4\u201362   30.47 (13.04)    Ftime  Failure time (months)  0.13\u2013131.77   20.28 (30.78)    Status  Status indicator  0=censored (46)   1=relapse (56)   2=competing event (75)     The statistical summary is generated differently for continuous and categorical variables:    For continuous variables, we are given the range, followed by the mean and standard deviation.    For categorical variables, we are given the counts for each category.    Note that failure time can also correspond to censoring.", 
            "title": "Data"
        }, 
        {
            "location": "/competingRisk/#population-time-plots", 
            "text": "In order to try and visualize the incidence density of relapse, we can look at a population-time plot: on the X-axis we have time, and on the Y-axis we have the size of the risk set at a particular time point. Failure times associated to the event of interest can then be highlighted on the plot using red dots.  nobs  -   nrow ( DT ) \nftime  -  DT $ ftime\nord  -   order ( ftime ,  decreasing = FALSE )  # We split the person-moments in four categories:  # 1) at-risk  # 2) main event  # 3) competing event  # 4) censored \nyCoords  -   cbind ( cumsum ( DT [ ord ,   Status ]   ==   2 ),  \n                  cumsum ( DT [ ord ,   Status ]   ==   1 ), \n                  cumsum ( DT [ ord ,   Status ]   ==   0 )) \nyCoords  -   cbind ( yCoords ,  nobs  -   rowSums ( yCoords ))  # Plot only at-risk \nplot ( 0 ,  type = n ,  xlim = c ( 0 ,   max ( ftime )),  ylim = c ( 0 ,  nobs ),  \n     xlab = Follow-up time ,  ylab = Population ) \npolygon ( c ( 0 ,   0 ,  ftime [ ord ],   max ( ftime ),   0 ), \n         c ( 0 ,  nobs ,  yCoords [, 4 ],   0 ,   0 ),  col  =   grey90 ) \ncases  -  DT [,   Status ]   ==   1  # randomly move the cases vertically \nmoved_cases  -  yCoords [ cases [ ord ],   4 ]   *  runif ( sum ( cases )) \npoints (( ftime [ ord ])[ cases [ ord ]],  moved_cases ,  pch = 20 ,  col = red ,  cex = 1 )    We can right away draw a few conclusions from this plot: first of all, we get a sense of how quickly the size of the risk set changes over time. We also see that the incidence density is non-constant: most relapses occur before 15 months. Finally, we also see that the risk set keeps shrinking after the last event has occured; this could be due to either censoring or the competing event.  To get an idea of whether only relapse is responsible for the shrinking of the risk set in the first few months of follow-up, we can also keep track of how many events have occured at each time point:  # Plot at-risk and events \nplot ( 0 ,  type = n ,  xlim = c ( 0 ,   max ( ftime )),  ylim = c ( 0 ,  nobs ),  \n     xlab = Follow-up time ,  ylab = Population ) \npolygon ( x  =   c ( 0 , ftime [ ord ],   max ( ftime ),   0 ),  \n        y  =   c ( 0 ,  yCoords [, 2 ],   0 ,   0 ),  \n        col  =   firebrick3 ) \npolygon ( x  =   c ( 0 ,  ftime [ ord ],  ftime [ rev ( ord )],   0 ,   0 ), \n        y  =   c ( 0 ,  yCoords [, 2 ],   rev ( yCoords [, 2 ]   +  yCoords [, 4 ]),  nobs ,   0 ),  \n        col  =   grey90 )  # randomly move the cases vertically \nmoved_cases  -  yCoords [ cases [ ord ],   2 ]   +  yCoords [ cases [ ord ],   4 ]   *  runif ( sum ( cases )) \npoints (( ftime [ ord ])[ cases [ ord ]],  moved_cases ,  pch = 20 ,  col = red ,  cex = 1 ) \nlegend ( topright ,  legend = c ( Relapse ,   At-risk ),  \n       col = c ( firebrick3 ,   grey90 ), \n       pch = 15 )    Therefore, there is also censoring and loss due to competing events happening in the first few months. However, with this plot, we can't differentiate bwetween the two contributions. For this reason we can also keep track of the number of competing events at each time point:  plot ( 0 ,  type = n ,  xlim = c ( 0 ,   max ( ftime )),  ylim = c ( 0 ,  nobs ),  \n     xlab = Follow-up time ,  ylab = Population ) \npolygon ( x  =   c ( 0 ,   max ( ftime ),   max ( ftime ),   0 ), \n        y  =   c ( 0 ,   0 ,  nobs ,  nobs ),  col  =   white )  # Event of interest \npolygon ( x  =   c ( 0 , ftime [ ord ],   max ( ftime ),   0 ),  \n        y  =   c ( 0 ,  yCoords [, 2 ],   0 ,   0 ),  \n        col  =   firebrick3 )  # Risk set \npolygon ( x  =   c ( 0 ,  ftime [ ord ],  ftime [ rev ( ord )],   0 ,   0 ), \n        y  =   c ( 0 ,  yCoords [, 2 ],   rev ( yCoords [, 2 ]   +  yCoords [, 4 ]),  nobs ,   0 ),  \n        col  =   grey90 )  # Competing event \npolygon ( x  =   c ( 0 ,  ftime [ ord ],   max ( ftime ),   0 ),  \n        y  =   c ( nobs ,  nobs  -  yCoords [, 1 ],  nobs ,  nobs ),  \n        col  =   dodgerblue2 )  # randomly move the cases vertically \nmoved_cases  -  yCoords [ cases [ ord ],   2 ]   +  yCoords [ cases [ ord ],   4 ]   *  runif ( sum ( cases )) \npoints (( ftime [ ord ])[ cases [ ord ]],  moved_cases ,  pch = 20 ,  col = red ,  cex = 1 ) \nlegend ( topright ,  legend = c ( Relapse ,   Competing event ,   At-risk ),  \n       col = c ( firebrick3 ,   dodgerblue2 ,   grey90 ), \n       pch = 15 )    From this last plot, we can see that there is no censoring during the first 10 months. Moreover, we see that the last competing event occurs around 20 months. Putting all this information together, we have evidence of two types of patients: very sick patients who either relapse or have a competing event early on, and healthier patients who are eventually lost to follow-up.", 
            "title": "Population-time plots"
        }, 
        {
            "location": "/competingRisk/#analysis", 
            "text": "We now turn to the analysis of this dataset. The population-time plots above give evidence of non-constant hazard; therefore, we will explicitely include time in the model. Note that we also include all other variables as possible confounders. First, we include time as a linear term:  library ( casebase ) \nmodel1  -  fitSmoothHazard ( Status  ~  ftime  +  Sex  +  D  +  Phase  +  Source  +  Age ,  \n                          data  =  DT ,  \n                          ratio  =   1000 ,  \n                          type  =   uniform ,  \n                          time  =   ftime )  summary ( model1 )   ## \n## Call:\n## vglm(formula = formula, family = multinomial(refLevel = 1), data = sampleData)\n## \n## Pearson residuals:\n##                         Min       1Q   Median        3Q    Max\n## log(mu[,2]/mu[,1]) -0.07252 -0.02214 -0.01238 -0.004705 144.48\n## log(mu[,3]/mu[,1]) -0.10874 -0.02844 -0.01188 -0.002703  63.81\n## \n## Coefficients:\n##                 Estimate Std. Error z value Pr( |z|)    \n## (Intercept):1  -3.471431   0.677926  -5.121 3.04e-07 ***\n## (Intercept):2  -2.553408   0.456314  -5.596 2.20e-08 ***\n## ftime:1        -0.069339   0.014637  -4.737 2.17e-06 ***\n## ftime:2        -0.103005   0.018040  -5.710 1.13e-08 ***\n## SexM:1         -0.283357   0.281482  -1.007 0.314097    \n## SexM:2         -0.393539   0.234499  -1.678 0.093306 .  \n## DAML:1         -0.615106   0.299529  -2.054 0.040016 *  \n## DAML:2         -0.128529   0.275187  -0.467 0.640457    \n## PhaseCR2:1      0.164757   0.465452   0.354 0.723360    \n## PhaseCR2:2      0.284447   0.328909   0.865 0.387138    \n## PhaseCR3:1      0.497277   0.689157   0.722 0.470557    \n## PhaseCR3:2      0.247308   0.522180   0.474 0.635780    \n## PhaseRelapse:1  1.425731   0.390068   3.655 0.000257 ***\n## PhaseRelapse:2  0.760170   0.305914   2.485 0.012958 *  \n## SourcePB:1      0.458579   0.569546   0.805 0.420725    \n## SourcePB:2     -1.085761   0.353344  -3.073 0.002120 ** \n## Age:1          -0.006502   0.011923  -0.545 0.585557    \n## Age:2           0.028097   0.009939   2.827 0.004699 ** \n## ---\n## Signif. codes:  0  ***  0.001  **  0.01  *  0.05  .  0.1     1\n## \n## Number of linear predictors:  2 \n## \n## Names of linear predictors: log(mu[,2]/mu[,1]), log(mu[,3]/mu[,1])\n## \n## Dispersion Parameter for multinomial family:   1\n## \n## Residual deviance: 2010.853 on 262244 degrees of freedom\n## \n## Log-likelihood: -1005.426 on 262244 degrees of freedom\n## \n## Number of iterations: 13 \n## \n## Reference group is level  1  of the response  Because of the results in Turgeon  et al   -@turgeonCompRisk , the standard errors we obtain from the multinomial logit fit are asymptotically correct, and therefore can be used to construct asymptotic confidence intervals.  From this summary, we see that time is indeed significant, as is Phase (only relapse vs. CR1). Interestingly, we see that the type of disease is only significant for the event of interest, whereas the type of transplant and the age of the patient are only significant for the competing event.  Next, we include the logarithm of time in the model (which leads to a Weibull hazard):  model2  -  fitSmoothHazard ( Status  ~   log ( ftime )   +  Sex  +  D  +  Phase  +  Source  +  Age ,  \n                          data  =  DT ,  \n                          ratio  =   1000 ,  \n                          type  =   uniform ,  \n                          time  =   ftime )  summary ( model2 )   ## \n## Call:\n## vglm(formula = formula, family = multinomial(refLevel = 1), data = sampleData)\n## \n## Pearson residuals:\n##                        Min       1Q   Median      3Q   Max\n## log(mu[,2]/mu[,1]) -0.1586 -0.02172 -0.01488 -0.0112 91.50\n## log(mu[,3]/mu[,1]) -0.2549 -0.02465 -0.01753 -0.0144 68.98\n## \n## Coefficients:\n##                 Estimate Std. Error z value Pr( |z|)    \n## (Intercept):1  -3.973373   0.697541  -5.696 1.22e-08 ***\n## (Intercept):2  -3.072860   0.458942  -6.696 2.15e-11 ***\n## log(ftime):1   -0.326885   0.068810  -4.751 2.03e-06 ***\n## log(ftime):2   -0.409365   0.055783  -7.339 2.16e-13 ***\n## SexM:1         -0.432316   0.291868  -1.481 0.138552    \n## SexM:2         -0.508326   0.239301  -2.124 0.033653 *  \n## DAML:1         -0.695149   0.301673  -2.304 0.021205 *  \n## DAML:2         -0.159079   0.284358  -0.559 0.575868    \n## PhaseCR2:1      0.256405   0.467125   0.549 0.583075    \n## PhaseCR2:2      0.394798   0.329179   1.199 0.230396    \n## PhaseCR3:1      0.437725   0.705766   0.620 0.535118    \n## PhaseCR3:2      0.109218   0.530056   0.206 0.836752    \n## PhaseRelapse:1  1.485346   0.392256   3.787 0.000153 ***\n## PhaseRelapse:2  0.851896   0.307304   2.772 0.005569 ** \n## SourcePB:1      0.679091   0.594402   1.142 0.253256    \n## SourcePB:2     -0.954314   0.364461  -2.618 0.008834 ** \n## Age:1          -0.003986   0.011672  -0.341 0.732740    \n## Age:2           0.028748   0.009829   2.925 0.003445 ** \n## ---\n## Signif. codes:  0  ***  0.001  **  0.01  *  0.05  .  0.1     1\n## \n## Number of linear predictors:  2 \n## \n## Names of linear predictors: log(mu[,2]/mu[,1]), log(mu[,3]/mu[,1])\n## \n## Dispersion Parameter for multinomial family:   1\n## \n## Residual deviance: 2106.207 on 262244 degrees of freedom\n## \n## Log-likelihood: -1053.103 on 262244 degrees of freedom\n## \n## Number of iterations: 11 \n## \n## Reference group is level  1  of the response  As we can see, the results are similar to the ones with a Gompertz hazard, although Sex is now significant for the competing event.  Finally, using splines, we can be quite flexible about the way the hazard depends on time:  model3  -  fitSmoothHazard ( \n    Status  ~  splines :: bs ( ftime )   +  Sex  +  D  +  Phase  +  Source  +  Age ,  \n    data  =  DT ,  \n    ratio  =   1000 ,  \n    type  =   uniform ,  \n    time  =   ftime )  summary ( model3 )   ## \n## Call:\n## vglm(formula = formula, family = multinomial(refLevel = 1), data = sampleData)\n## \n## Pearson residuals:\n##                         Min       1Q    Median         3Q   Max\n## log(mu[,2]/mu[,1]) -0.06550 -0.02251 -0.012716 -2.422e-03 179.5\n## log(mu[,3]/mu[,1]) -0.08964 -0.03003 -0.004575 -2.351e-06 116.1\n## \n## Coefficients:\n##                         Estimate Std. Error z value Pr( |z|)    \n## (Intercept):1          -3.691355   0.708817  -5.208 1.91e-07 ***\n## (Intercept):2          -3.222215   0.510159  -6.316 2.68e-10 ***\n## splines::bs(ftime)1:1  -0.065812   2.262489  -0.029 0.976794    \n## splines::bs(ftime)1:2   7.050859   3.651841   1.931 0.053512 .  \n## splines::bs(ftime)2:1 -16.116417   8.171818  -1.972 0.048587 *  \n## splines::bs(ftime)2:2 -77.611389  25.533712  -3.040 0.002369 ** \n## splines::bs(ftime)3:1  -2.492098  10.137201  -0.246 0.805809    \n## splines::bs(ftime)3:2  -2.618538  22.372792  -0.117 0.906827    \n## SexM:1                 -0.312318   0.282712  -1.105 0.269280    \n## SexM:2                 -0.432579   0.235026  -1.841 0.065686 .  \n## DAML:1                 -0.637589   0.298442  -2.136 0.032648 *  \n## DAML:2                 -0.150842   0.272504  -0.554 0.579894    \n## PhaseCR2:1              0.177523   0.465556   0.381 0.702971    \n## PhaseCR2:2              0.295998   0.330082   0.897 0.369857    \n## PhaseCR3:1              0.535253   0.694359   0.771 0.440790    \n## PhaseCR3:2              0.263867   0.525446   0.502 0.615543    \n## PhaseRelapse:1          1.492639   0.395031   3.779 0.000158 ***\n## PhaseRelapse:2          0.891996   0.310906   2.869 0.004117 ** \n## SourcePB:1              0.387227   0.572715   0.676 0.498961    \n## SourcePB:2             -1.161639   0.356260  -3.261 0.001112 ** \n## Age:1                  -0.004674   0.011952  -0.391 0.695744    \n## Age:2                   0.030146   0.010007   3.012 0.002591 ** \n## ---\n## Signif. codes:  0  ***  0.001  **  0.01  *  0.05  .  0.1     1\n## \n## Number of linear predictors:  2 \n## \n## Names of linear predictors: log(mu[,2]/mu[,1]), log(mu[,3]/mu[,1])\n## \n## Dispersion Parameter for multinomial family:   1\n## \n## Residual deviance: 1995.088 on 262240 degrees of freedom\n## \n## Log-likelihood: -997.5441 on 262240 degrees of freedom\n## \n## Number of iterations: 18 \n## \n## Reference group is level  1  of the response  Again, we see that the results are quite similar for this third model.", 
            "title": "Analysis"
        }, 
        {
            "location": "/competingRisk/#absolute-risk", 
            "text": "We now look at the 2-year risk of relapse:  linearRisk  -  absoluteRisk ( object  =  model1 ,  time  =   24 ,  newdata  =  DT [ 1 : 10 ,]) \nlogRisk  -  absoluteRisk ( object  =  model2 ,  time  =   24 ,  newdata  =  DT [ 1 : 10 ,]) \nsplineRisk  -  absoluteRisk ( object  =  model3 ,  time  =   24 ,  newdata  =  DT [ 1 : 10 ,])   plot ( linearRisk [, 1 ],  logRisk [, 1 ], \n     xlab = Linear ,  ylab  =   Log/Spline ,  pch = 19 , \n     xlim = c ( 0 , 1 ),  ylim = c ( 0 , 1 ),  col = red ) \npoints ( linearRisk [, 1 ],  splineRisk [, 1 ], \n       col  =   blue ,  pch = 19 ) \nabline ( a = 0 ,  b = 1 ,  lty = 2 ,  lwd = 2 ) \nlegend ( topleft ,  legend = c ( Log ,   Spline ), \n       pch = 19 ,  col = c ( red ,   blue ))    As we can see, Model 1 and Model 2 give different absolute risk predictions, but the linear and the spline model actually give very similar results. We can also estimate the mean absolute risk for the entire dataset:  # The first column corresponds to the event of interest  mean ( linearRisk [, 1 ])   ## [1] 0.204129  mean ( logRisk [, 1 ])   ## [1] 0.1506065  mean ( splineRisk [, 1 ])   ## [1] 0.1136662", 
            "title": "Absolute risk"
        }, 
        {
            "location": "/competingRisk/#session-information", 
            "text": "## R version 3.3.1 (2016-06-21)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 16.10\n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] casebase_0.1.0\n## \n## loaded via a namespace (and not attached):\n##  [1] Rcpp_0.12.9      knitr_1.15.1     magrittr_1.5     splines_3.3.1   \n##  [5] munsell_0.4.3    lattice_0.20-33  colorspace_1.3-1 stringr_1.2.0   \n##  [9] plyr_1.8.4       tools_3.3.1      grid_3.3.1       data.table_1.9.6\n## [13] gtable_0.2.0     htmltools_0.3.5  survival_2.39-5  yaml_2.1.14     \n## [17] lazyeval_0.2.0   rprojroot_1.2    digest_0.6.12    assertthat_0.1  \n## [21] tibble_1.2       Matrix_1.2-6     ggplot2_2.2.0    VGAM_1.0-2      \n## [25] evaluate_0.10    rmarkdown_1.3    stringi_1.1.2    scales_0.4.1    \n## [29] backports_1.0.5  stats4_3.3.1     chron_2.3-47", 
            "title": "Session information"
        }, 
        {
            "location": "/competingRisk/#references", 
            "text": "", 
            "title": "References"
        }, 
        {
            "location": "/references/", 
            "text": "References\n\n\n\n\n\n\n\nEfron, Bradley. 1977. \"The Efficiency of Cox's Likelihood Function for Censored Data.\" \nJournal of the American Statistical Association\n 72 (359). Taylor \n&\n Francis Group: 557\u201365.\n\n\n\n\n\n\n\n\nHanley, James A, and Olli S Miettinen. 2009. \"Fitting Smooth-in-Time Prognostic Risk Functions via Logistic Regression.\" \nThe International Journal of Biostatistics\n 5 (1).\n\n\n\n\n\n\n\n\nMantel, Nathan. 1973. \"Synthetic Retrospective Studies and Related Topics.\" \nBiometrics\n. JSTOR, 479\u201386.\n\n\n\n\n\n\n\n\nSaarela, Olli. 2015. \"A Case-Base Sampling Method for Estimating Recurrent Event Intensities.\" \nLifetime Data Analysis\n. Springer, 1\u201317.\n\n\n\n\n\n\n\n\nSaarela, Olli, and Elja Arjas. 2015. \"Non-Parametric Bayesian Hazard Regression for Chronic Disease Risk Assessment.\" \nScandinavian Journal of Statistics\n 42 (2). Wiley Online Library: 609\u201326.\n\n\n\n\n\n\n\n\nScrucca, L, A Santucci, and F Aversa. 2010. \"Regression Modeling of Competing Risk Using R: An in Depth Guide for Clinicians.\" \nBone Marrow Transplantation\n 45 (9). Nature Publishing Group: 1388\u201395.", 
            "title": "References"
        }, 
        {
            "location": "/references/#references", 
            "text": "Efron, Bradley. 1977. \"The Efficiency of Cox's Likelihood Function for Censored Data.\"  Journal of the American Statistical Association  72 (359). Taylor  &  Francis Group: 557\u201365.    \nHanley, James A, and Olli S Miettinen. 2009. \"Fitting Smooth-in-Time Prognostic Risk Functions via Logistic Regression.\"  The International Journal of Biostatistics  5 (1).    \nMantel, Nathan. 1973. \"Synthetic Retrospective Studies and Related Topics.\"  Biometrics . JSTOR, 479\u201386.    \nSaarela, Olli. 2015. \"A Case-Base Sampling Method for Estimating Recurrent Event Intensities.\"  Lifetime Data Analysis . Springer, 1\u201317.    \nSaarela, Olli, and Elja Arjas. 2015. \"Non-Parametric Bayesian Hazard Regression for Chronic Disease Risk Assessment.\"  Scandinavian Journal of Statistics  42 (2). Wiley Online Library: 609\u201326.    \nScrucca, L, A Santucci, and F Aversa. 2010. \"Regression Modeling of Competing Risk Using R: An in Depth Guide for Clinicians.\"  Bone Marrow Transplantation  45 (9). Nature Publishing Group: 1388\u201395.", 
            "title": "References"
        }
    ]
}