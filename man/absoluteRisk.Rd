% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/absoluteRisk.R
\name{absoluteRisk}
\alias{absoluteRisk}
\title{Compute absolute risks using the fitted hazard function.}
\usage{
absoluteRisk(object, time, newdata = NULL, method = c("quadrature",
  "montecarlo"), nsamp = 100)
}
\arguments{
\item{object}{Output of function \link{\code{fitSmoothHazard}}.}

\item{time}{Upper bound of the interval over which to compute the absolute
risk. It is assumed that \code{time} is given in the same units as the time
variable in the dataset used to fit the hazard function.}

\item{newdata}{Optionally, a data frame in which to look for variables with
which to predict. If omitted, the mean absolute risk is returned.}

\item{method}{Method used for integration. Defaults to \code{"quadrature"},
which simply calls the function \link{\code{integrate}}. The only other
option is \code{"montecarlo"}, which implements Monte-Carlo integration.}

\item{nsamp}{Maximal number of subdivisions (if \code{method = "quadrature"})
or number of sampled points (if \code{method = "montecarlo}).}
}
\value{
Returns the mean absolute risk at the user-supplied time, if
  \code{newdata = NULL}, or the estimated absolute risk for the user-supplied
  covariate profiles.
}
\description{
Using the output of the function \link{\code{fitSmoothHazard}}, we can
compute absolute risks by integrating the fitted hazard function over a time
period and then coverting this to an estimated survival for each individual.
}
\details{
It is currently assumed that the time variable corresponds to the second, and
only the second, column of the design matrix. In particular, splines may not
be used at this time to fit a semi-parametric hazard function.
}

