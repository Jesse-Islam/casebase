{
    "collab_server" : "",
    "contents" : "---\ntitle: \"data\"\nauthor: \"Maxime\"\ndate: \"January 22, 2017\"\noutput:\n  md_document:\n    variant: markdown\n---\n\n## Methodological details\n\nCase-base sampling was proposed by [Hanley and Miettinen, 2009](https://github.com/sahirbhatnagar/casebase/blob/master/references/Hanley_Miettinen-2009-Inter_J_of_Biostats.pdf) as a way to fit smooth-in-time parametric hazard functions via logistic regression. The main idea, which was first proposed by Mantel, 1973 and then later developped by Efron, 1977, is to sample person-moments, i.e. discrete time points along an subject's follow-up time, in order to construct a base series against which the case series can be compared. \n\nThis approach allows the explicit inclusion of the time variable into the model, which enables the user to fit a wide class of parametric hazard functions. For example, including time linearly recovers the Gompertz hazard, whereas including time *logarithmically* recovers the Weibull hazard; not including time at all corresponds to the exponential hazard.\n\nThe theoretical properties of this approach have been studied in [Saarela and Arjas, 2015](https://github.com/sahirbhatnagar/casebase/blob/master/references/Saarela_et_al-2015-Scandinavian_Journal_of_Statistics.pdf) and [Saarela, 2015](https://github.com/sahirbhatnagar/casebase/blob/master/references/Saarela-2015-Lifetime_Data_Analysis.pdf).\n\n## First example\n\nThe first example we discuss uses the well-known ```veteran``` dataset, which is part of the ```survival``` package. As we can see below, there is almost no censoring, and therefore we can get a good visual representation of the survival function:\n\n```{r eval=TRUE, echo=-1}\nrm(list = ls())\nset.seed(12345)\n\nlibrary(survival)\ndata(veteran)\ntable(veteran$status)\n\nevtimes <- veteran$time[veteran$status == 1]\nhist(evtimes, nclass = 30, main = '', xlab = 'Survival time (days)', \n     col = 'gray90', probability = TRUE)\ntgrid <- seq(0, 1000, by = 10)\nlines(tgrid, dexp(tgrid, rate = 1.0/mean(evtimes)), \n      lwd = 2, lty = 2, col = 'red')\n```\n\nAs we can see, the empirical survival function ressembles an exponential distribution.\n\nWe will first try to estimate the hazard function parametrically using some well-known regression routines. But first, we will reformat the data slightly.\n\n```{r eval=TRUE}\nveteran$prior <- factor(veteran$prior, levels = c(0, 10), labels = c(\"no\",\"yes\"))\nveteran$celltype <- factor(veteran$celltype, \n                           levels = c('large', 'squamous', 'smallcell', 'adeno'))\nveteran$trt <- factor(veteran$trt, levels = c(1, 2), labels = c(\"standard\", \"test\"))\n```\n\nUsing the ```eha``` package, we can fit a Weibull form, with different values of the shape parameter. For `shape = 1`, we get an exponential distribution:\n\n```{r eval=TRUE}\npacman::p_load(eha)\ny <- with(veteran, Surv(time, status))\n\nmodel1 <- weibreg(y ~ karno + diagtime + age + prior + celltype + trt, \n                  data = veteran, shape = 1)\nsummary(model1)\n```\n\nIf we take `shape = 0`, the shape parameter is estimated along with the regression coefficients:\n\n```{r eval=TRUE}\nmodel2 <- weibreg(y ~ karno + diagtime + age + prior + celltype + trt, \n                  data = veteran, shape = 0)\nsummary(model2)\n```\n\nFinally, we can also fit a Cox proportional hazard:\n\n```{r eval=TRUE}\nmodel3 <- coxph(y ~ karno + diagtime + age + prior + celltype + trt, \n                data = veteran)\nsummary(model3)\n```\n\nAs we can see, all three models are significant, and they give similar information: ```karno``` and ```celltype``` are significant predictors, both treatment is not.\n\nThe method available in this package makes use of *case-base sampling*. That is, person-moments are randomly sampled across the entire follow-up time, with some moments corresponding to cases and others to controls. By sampling person-moments instead of individuals, we can then use logistic regression to fit smooth-in-time parametric hazard functions. See the previous section for more details.\n\nFirst, we will look at the follow-up time by using population-time plots:\n\n```{r eval=TRUE}\n# create popTime object\npt_veteran <- casebase::popTime(data = veteran)\n\nclass(pt_veteran)\n\n# plot method for objects of class 'popTime'\nplot(pt_veteran)\n```\n\nPopulation-time plots are a useful way of visualizing the total follow-up experience, where individuals appear on the y-axis, and follow-up time on the x-axis; each individual's follow-up time is represented by a gray line segment. For convenience, we have ordered the patients according to their time-to-event, and each event is represented by a red dot. The censored observations (of which there is only a few) correspond to the grey lines which do not end with a red dot.\n\nNext, we use case-base sampling to fit a parametric hazard function via logistic regression. First, we will include time as a linear term; as noted above, this corresponds to an Gompertz hazard.\n\n```{r eval=TRUE}\nlibrary(casebase)\nmodel4 <- fitSmoothHazard(status ~ time + karno + diagtime + age + prior +\n             celltype + trt, data = veteran, ratio = 100, type = \"uniform\")\nsummary(model4)\n```\n\nSince the output object from ```fitSmoothHazard``` inherits from the ```glm``` class, we see a familiar result when using the function ```summary```.\n\nThe main purpose of fitting smooth hazard functions is that it is then relatively easy to compute absolute risks. For example, we can use the function ```absoluteRisk``` to compute the mean absolute risk at 90 days, which can then be compared to the empirical measure.\n\n```{r eval=TRUE}\nabsoluteRisk(object = model4, time = 90)\n\nftime <- veteran$time\nmean(ftime <= 90)\n```\n\nWe can also fit a Weibull hazard by using a logarithmic term for time:\n\n```{r eval=TRUE}\nmodel5 <- fitSmoothHazard(status ~ log(time) + karno + diagtime + age + prior +\n             celltype + trt, data = veteran, ratio = 100, type = \"uniform\")\nsummary(model5)\n```\n\nWith case-base sampling, it is straightforward to fit a semi-parametric hazard function using splines, which can then be used to estimate the mean absolute risk.\n\n```{r eval=TRUE}\n# Fit a spline for time\nlibrary(splines)\nmodel6 <- fitSmoothHazard(status ~ bs(time) + karno + diagtime + age + prior +\n             celltype + trt, data = veteran, ratio = 100, type = \"uniform\")\nsummary(model6)\n\nabsoluteRisk(object = model6, time = 90)\n```\n\nAs we can see from the summary, there is little evidence that splines actually improve the fit. Moreover, we can see that estimated individual absolute risks are essentially the same when using either a linear term or splines:\n\n```{r eval=TRUE}\nlinearRisk <- absoluteRisk(object = model4, time = 90, newdata = veteran)\nsplineRisk <- absoluteRisk(object = model6, time = 90, newdata = veteran)\n\nplot(linearRisk, splineRisk,\n     xlab = \"Linear\", ylab = \"Splines\", pch = 19)\nabline(a = 0, b = 1, lty = 2, lwd = 2, col = 'red')\n```\n\nThese last three models give similar information as the first three, i.e. the main predictors for the hazard are ```karno``` and ```celltype```, with treatment being non-significant. Moreover, by explicitely including the time variable in the formula, we see that it is not significant; this is evidence that the true hazard is exponential. \n\nFinally, we can look at the estimates of the coefficients for the Cox model, as well as the last three models (CB stands for \"case-base\"):\n\n```{r, echo = FALSE}\ntable_coef <- cbind(coefficients(model3), \n                    coefficients(model4)[-(1:2)], \n                    coefficients(model5)[-(1:2)], \n                    coefficients(model6)[-(1:4)])\nknitr::kable(table_coef, format = \"html\", digits = 4,\n             col.names = c(\"Cox model\", \n                           \"CB linear\",\n                           \"CB log-linear\",\n                           \"CB splines\"))\n```\n\n\n\n## Cumulative Incidence Curves\n\nHere we show how to calculate the cumulative incidence curves for a specific risk profile using the following equation:\n\n$$ CI(x, t) = 1 - exp\\left[ - \\int_0^t h(x, u) \\textrm{d}u \\right] $$ \nwhere \\\\( h(x, t) \\\\) is the hazard function, \\\\( t \\\\) denotes the numerical value (number of units) of a point in prognostic/prospective time and \\\\( x \\\\) is the realization of the vector \\\\( X \\\\) of variates based on the patient's profile and intervention (if any).\n\nWe compare the cumulative incidence functions from the fully-parametric fit using case base sampling, with those from the Cox model:\n\n```{r}\n# define a specific covariate profile\nnew_data <- data.frame(trt = \"test\", \n                       celltype = \"adeno\", \n                       karno = median(veteran$karno), \n                       diagtime = median(veteran$diagtime),\n                       age = median(veteran$age),\n                       prior = \"no\")\n\n# calculate cumulative incidence using casebase model\nsmooth_risk <- absoluteRisk(object = model4, time = seq(0,300, 1), \n                            newdata = new_data)\n\n# cumulative incidence function for the Cox model\nplot(survfit(model3, newdata=new_data),\n     xlab = \"Days\", ylab=\"Cumulative Incidence (%)\", fun = \"event\",\n     xlim = c(0,300), conf.int = F, col = \"red\", \n     main = sprintf(\"Estimated Cumulative Incidence (risk) of Lung Cancer\\ntrt = test, celltype = adeno, karno = %g,\\ndiagtime = %g, age = %g, prior = no\", median(veteran$karno), median(veteran$diagtime), \n                    median(veteran$age)))\n\n# add casebase curve with legend\nlines(seq(0,300, 1), smooth_risk[1,], type = \"l\", col = \"blue\")\nlegend(\"bottomright\", \n       legend = c(\"semi-parametric (Cox)\", \"parametric (casebase)\"), \n       col = c(\"red\",\"blue\"),\n       lty = c(1, 1), \n       bg = \"gray90\")\n```\n\n\n\n## Session information\n\n```{r echo=FALSE, eval=TRUE}\nprint(sessionInfo(), locale = F)\n```\n\n\n",
    "created" : 1490629402196.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2345424287",
    "id" : "3005679A",
    "lastKnownWriteTime" : 1490712264,
    "last_content_update" : 1490712264,
    "path" : "~/git_repositories/casebase/docs/smoothHazard.Rmd",
    "project_path" : "docs/smoothHazard.Rmd",
    "properties" : {
        "chunk_output_type" : "console",
        "docOutlineVisible" : "0",
        "tempName" : "Untitled1"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}