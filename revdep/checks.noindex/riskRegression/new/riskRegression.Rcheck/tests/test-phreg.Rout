
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### test-phreg.R --- 
> #----------------------------------------------------------------------
> ## author: Brice Ozenne
> ## created: feb 28 2017 (09:52) 
> ## Version: 
> ## last-updated: Dec  7 2020 (09:23) 
> ##           By: Thomas Alexander Gerds
> ##     Update #: 22
> #----------------------------------------------------------------------
> ## 
> ### Commentary: 
> ## 
> ### Change Log:
> #----------------------------------------------------------------------
> ## 
> ### Code:
> 
> ## * Settings
> library(testthat)
> library(riskRegression)
riskRegression version 2020.12.08
> library(rms)
Loading required package: Hmisc
Loading required package: lattice
Loading required package: survival
Loading required package: Formula
Loading required package: ggplot2

Attaching package: 'Hmisc'

The following object is masked from 'package:testthat':

    describe

The following objects are masked from 'package:base':

    format.pval, units

Loading required package: SparseM

Attaching package: 'SparseM'

The following object is masked from 'package:base':

    backsolve

> library(survival)
> library(prodlim)
> library(mets)
Loading required package: timereg
Loading required package: lava

Attaching package: 'lava'

The following object is masked from 'package:ggplot2':

    vars

The following object is masked from 'package:testthat':

    compare

mets version 1.2.8.1

Attaching package: 'mets'

The following object is masked from 'package:rms':

    bplot

> 
> context("Compatibility with the phreg function from the mets package")
> 
> ## * Survival
> 
> ## ** Data
> set.seed(10)
> d <- sampleData(5e1, outcome = "survival")[,.(eventtime,event,X1,X2,X3,X4,X6)]
> d[ , Xcat2 := as.factor(paste0(X1,X2))]
> d[, entry:= 0]
> d[, id := 1:.N]
> d[, group := factor(rbinom(.N,2,0.5))]
> 
> ## ** Tests
> test_that("survival - no strata", {
+     m.phreg <- phreg(Surv(entry,eventtime,event)~X1+X2,data=d)
+     m.coxph <- coxph(Surv(eventtime,event)~X1+X2,data=d, x = TRUE, y = TRUE)
+     expect_equal(predictCox(m.phreg),predictCox(m.coxph), tol = 1e-8)
+ 
+     pred.phreg <- predictCox(m.phreg, newdata = d, time = 1:5, se = TRUE)
+     pred.coxph <- predictCox(m.coxph, newdata = d, time = 1:5, se = TRUE)
+     expect_equal(pred.phreg$survival, pred.coxph$survival, tol = 1e-8)
+ })
Test passed 🎊
> 
> test_that("survival - one strata variable", {
+     mS.phreg <- phreg(Surv(entry,eventtime,event)~X1+X2+strata(group)+cluster(id),data=d)
+     mS.coxph <- coxph(Surv(eventtime,event)~X1+X2+strata(group),data=d, x = TRUE, y = TRUE)
+     expect_equal(predictCox(mS.phreg),predictCox(mS.coxph), tol = 1e-8)
+ 
+     predS.phreg <- predictCox(mS.phreg, newdata = d, time = 1:5, se = TRUE)
+     predS.coxph <- predictCox(mS.coxph, newdata = d, time = 1:5, se = TRUE)
+     expect_equal(predS.phreg$survival, predS.coxph$survival, tol = 1e-8)
+ 
+     ## bug in previous version, could not create design matrix when group had only one value
+     predS.phreg <- predictCox(mS.phreg, newdata = d[group==0], time = 1:5, se = TRUE)
+     predS.coxph <- predictCox(mS.coxph, newdata = d[group==0], time = 1:5, se = TRUE)
+     expect_equal(predS.phreg$survival, predS.coxph$survival, tol = 1e-8)
+ 
+ })
Test passed 😀
> 
> 
> ## several strata variables
> test_that("survival - several strata variables", {
+     mS.phreg <- phreg(Surv(entry,eventtime,event)~X1+X2+strata(group,X3)+cluster(id),data=d)
+     mS.coxph <- coxph(Surv(eventtime,event)~X1+X2+strata(group)+strata(X3),data=d, x = TRUE, y = TRUE)
+     expect_equal(predictCox(mS.phreg)[c("hazard","cumhazard","survival")],
+                  predictCox(mS.coxph)[c("hazard","cumhazard","survival")],
+                  tol = 1e-8)
+ 
+     predS.phreg <- predictCox(mS.phreg, newdata = d, time = 1:5, se = TRUE)
+     predS.coxph <- predictCox(mS.coxph, newdata = d, time = 1:5, se = TRUE)
+     expect_equal(predS.phreg$survival, predS.coxph$survival, tol = 1e-8)
+ 
+ 
+ })
Test passed 😸
> 
> ## * Competing risks
> ## ** Data
> set.seed(10)
> d <- sampleData(1e2, outcome = "competing.risks")[,.(time,event,X1,X2,X3,X4,X6)]
> d[ , Xcat2 := as.factor(paste0(X1,X2))]
> d[, id := 1:.N]
> d[, group := factor(rbinom(.N,2,0.5))]
> 
> ## ** Tests
> test_that("competing risk - no strata", {
+     m.phreg <- CSC(Hist(time, event)~X1+X2,data=d,
+                    fitter = "phreg")
+     m.coxph <- CSC(Hist(time,event)~X1+X2,data=d,
+                    fitter = "coxph")
+     expect_equal(class(m.phreg$models[[1]]),"phreg")
+     pred.phreg <- predict(m.phreg, newdata = d, times = 1:5, cause = 1, se = TRUE)
+     pred.coxph <- predict(m.coxph, newdata = d, times = 1:5, cause = 1, se = TRUE)
+     expect_equal(pred.phreg,pred.coxph, tol = 1e-8)
+ })
Test passed 😸
> 
> test_that("competing risk - one strata variable", {
+     mS.phreg <- CSC(Hist(time, event)~X1+X2+strata(group)+cluster(id),data=d,
+                     fitter = "phreg")
+     mS.coxph <- CSC(Hist(time,event)~X1+X2+strata(group),data=d,
+                     fitter = "coxph")
+ 
+     expect_equal(class(mS.phreg$models[[1]]),"phreg")
+     predS.phreg <- predict(mS.phreg, newdata = d, times = 1:5, cause = 1, se = TRUE)
+     predS.coxph <- predict(mS.coxph, newdata = d, times = 1:5, cause = 1, se = TRUE)
+     expect_equal(predS.phreg,predS.coxph, tol = 1e-3)
+ })
Test passed 😀
> 
> test_that("competing risk - several strata variables", {
+     mS.phreg <- CSC(Hist(time, event)~X1+X2+strata(group,X3)+cluster(id),data=d,
+                     fitter = "phreg")
+     mS.coxph <- CSC(Hist(time,event)~X1+X2+strata(group)+strata(X3),data=d,
+                     fitter = "coxph")
+     expect_equal(class(mS.phreg$models[[1]]),"phreg")
+     predS.phreg <- predict(mS.phreg, newdata = d, times = 1:5, cause = 1, se = TRUE)
+     predS.coxph <- predict(mS.coxph, newdata = d, times = 1:5, cause = 1, se = TRUE)
+     expect_equal(predS.phreg,predS.coxph, tol = 1e-3)
+ 
+ })
Test passed 🎊
> ##----------------------------------------------------------------------
> ### test-phreg.R ends here
> 
> proc.time()
   user  system elapsed 
  6.774   0.458   8.220 
